/*
 * AlexisHR API
 * <h1 id=\"introduction\">Introduction</h1>  <p>    AlexisHR API is currently in preview. This means that small, backward    incompatible changes might be introduced while in preview. The changes will be    documented and communicated.    <a      href=\"https://cdn.forms-content.sg-form.com/56c6a65c-90a2-11eb-a700-a6de1aea3a1a\"      target=\"_blank\"      ><button>Subscribe to updates</button></a    >  </p>    <h1 id=\"authentication\">Authentication</h1>  <pre class=\"click-to-expand-wrapper is-snippet-wrapper language-undefined\">  <code class=\"is-highlighted language-bash\">curl https://api.alexishr.com/v1/employee \\    -H \"Authorization: Bearer &lt;your_access_token&gt;\"</code>  </pre>  <p>    Authenticate your account when using the API by including your secret Access    Token in the request.    <a href=\"https://app.alexishr.com/access-tokens\">Manage your Access Tokens</a    >.  </p>  <p>    Authentication is performed by passing the Access Token in the Authorization    header.  </p>  <hr />    <h1 id=\"structure\">Structure</h1>  <p>    You will find the structure of the API to be highly uniform and consistent.    Typically every resource can be accessed via a top level endpoint, such as    <code>/v1/employee</code>. For every such resource, you can perform some of    the following operations:  </p>  <h2>Operations</h2>  <table>    <tr>      <td>GET /v1/:resource</td>      <td>List all objects of this type</td>    </tr>    <tr>      <td>GET /v1/:resource/:id</td>      <td>Retrieve a resource by id</td>    </tr>    <tr>      <td>POST /v1/:resource</td>      <td>Create a resource of this type</td>    </tr>    <tr>      <td>PATCH /v1/:resource/:id</td>      <td>Update the resource by id</td>    </tr>    <tr>      <td>DELETE /v1/:resource/:id</td>      <td>Delete the resource by id</td>    </tr>  </table>  <hr />    <h1 id=\"roles\">Roles</h1>  <p>The Access Tokens will have owner permission on the account</p>  <hr />    <h1 id=\"filters\">Filters</h1>  <p>    Some of the list endpoints allow to filter results by certain conditions.    Refer to specific resources to find out what criteria are allowed. Below is a    list of the different conditions.  </p>    <h4 id=\"eq\"><code>$eq</code></h4>  <p>Find all results matching the attribute value specified.</p>  <div>    <pre><code class=\"language-shell\" data-lang=\"shell\">GET /v1/example?filters[fieldName][$eq]=value</code></pre>  </div>  <p>Can also be simplified like this.</p>  <div>    <pre><code class=\"language-shell\" data-lang=\"shell\">GET /v1/example?filters[fieldName]=value</code></pre>  </div>    <h4 id=\"neq\"><code>$neq</code></h4>  <p>Find all results not matching the attribute value specified.</p>  <div>    <pre><code class=\"language-shell\" data-lang=\"shell\">GET /v1/example?filters[fieldName][$neq]=value</code></pre>  </div>    <h4 id=\"gt\"><code>$gt</code>, <code>$gte</code></h4>  <p>    Find all results where the value is more (<code>$gt</code>) or more and equal    (<code>$gte</code>) to a given value.  </p>  <div>    <pre><code class=\"language-shell\" data-lang=\"shell\">GET /v1/example?filters[startDate][$gte]=2020-01-01</code></pre>  </div>  <hr />    <h4 id=\"lt\"><code>$lt</code>, <code>$lte</code></h4>  <p>    Find all results where the value is less (<code>$lt</code>) or less and equal    (<code>$lte</code>) to a given value.  </p>  <div>    <pre><code class=\"language-shell\" data-lang=\"shell\">GET /v1/example?filters[startDate][$lte]=2020-01-01</code></pre>  </div>  <hr />    <h4 id=\"in\"><code>$in</code>, <code>$nin</code></h4>  <p>    Find all results matching (<code>$in</code>) or not matching    (<code>$nin</code>) any of the attribute values specified.  </p>  <div>    <pre><code class=\"language-shell\" data-lang=\"shell\">GET /v1/example?filters[fieldName][$in][]=value1&filters[fieldName][$in][]=value2</code></pre>  </div>  <hr />    <h4 id=\"between\"><code>$between</code></h4>  <p>Find all results between two values specified.</p>  <div>    <pre><code class=\"language-shell\" data-lang=\"shell\">GET /v1/example?filters[startDate][$between][]=2020-01-01&filters[startDate][$between][]=2020-12-31</code></pre>  </div>  <hr />    <h1 id=\"versioning\">Versioning</h1>  <p>    Each version of the API is guaranteed to be compatible with the resources of    the same version. When we make breaking changes to the API a new version will    be published  </p>  <hr />    <h1 id=\"changelog\">Changelog</h1>  <h3>2023-12-20</h3>  <p>Field [updated] added for filter & select for Get Many Employments and Get Many Employees.</p>  <h3>2021-03-15</h3>  <p>First draft was published</p>  <hr />   # Authentication  <!-- ReDoc-Inject: <security-definitions> -->
 *
 * The version of the OpenAPI document: v1-preview
 * Contact: support@alexishr.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.BankAccountResponse;
import com.konfigthis.client.model.EmployeeTaxResponse;
import com.konfigthis.client.model.HomeAddressResponse;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * EmployeeResponse
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class EmployeeResponse {
  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_ACTIVE = "active";
  @SerializedName(SERIALIZED_NAME_ACTIVE)
  private Boolean active;

  public static final String SERIALIZED_NAME_COMPANY_ID = "companyId";
  @SerializedName(SERIALIZED_NAME_COMPANY_ID)
  private String companyId;

  public static final String SERIALIZED_NAME_OFFICE_ID = "officeId";
  @SerializedName(SERIALIZED_NAME_OFFICE_ID)
  private String officeId;

  public static final String SERIALIZED_NAME_MANAGER_EMPLOYEE_ID = "managerEmployeeId";
  @SerializedName(SERIALIZED_NAME_MANAGER_EMPLOYEE_ID)
  private String managerEmployeeId;

  public static final String SERIALIZED_NAME_DEPARTMENT_ID = "departmentId";
  @SerializedName(SERIALIZED_NAME_DEPARTMENT_ID)
  private String departmentId;

  public static final String SERIALIZED_NAME_COST_CENTER_ID = "costCenterId";
  @SerializedName(SERIALIZED_NAME_COST_CENTER_ID)
  private String costCenterId;

  public static final String SERIALIZED_NAME_EMPLOYMENT_ID = "employmentId";
  @SerializedName(SERIALIZED_NAME_EMPLOYMENT_ID)
  private String employmentId;

  public static final String SERIALIZED_NAME_EMPLOYMENT_TYPE_ID = "employmentTypeId";
  @SerializedName(SERIALIZED_NAME_EMPLOYMENT_TYPE_ID)
  private String employmentTypeId;

  public static final String SERIALIZED_NAME_EMPLOYMENT_COUNTRY = "employmentCountry";
  @SerializedName(SERIALIZED_NAME_EMPLOYMENT_COUNTRY)
  private String employmentCountry;

  public static final String SERIALIZED_NAME_COMPENSATION_ID = "compensationId";
  @SerializedName(SERIALIZED_NAME_COMPENSATION_ID)
  private String compensationId;

  public static final String SERIALIZED_NAME_USER_ID = "userId";
  @SerializedName(SERIALIZED_NAME_USER_ID)
  private String userId;

  public static final String SERIALIZED_NAME_USER_NAME = "userName";
  @SerializedName(SERIALIZED_NAME_USER_NAME)
  private String userName;

  public static final String SERIALIZED_NAME_DIVISION = "division";
  @SerializedName(SERIALIZED_NAME_DIVISION)
  private String division;

  public static final String SERIALIZED_NAME_ORGANIZATION = "organization";
  @SerializedName(SERIALIZED_NAME_ORGANIZATION)
  private String organization;

  public static final String SERIALIZED_NAME_TAX = "tax";
  @SerializedName(SERIALIZED_NAME_TAX)
  private EmployeeTaxResponse tax;

  public static final String SERIALIZED_NAME_EMPLOYEE_NUMBER = "employeeNumber";
  @SerializedName(SERIALIZED_NAME_EMPLOYEE_NUMBER)
  private String employeeNumber;

  public static final String SERIALIZED_NAME_WORK_EMAIL = "workEmail";
  @SerializedName(SERIALIZED_NAME_WORK_EMAIL)
  private String workEmail;

  public static final String SERIALIZED_NAME_WORK_PHONE = "workPhone";
  @SerializedName(SERIALIZED_NAME_WORK_PHONE)
  private String workPhone;

  public static final String SERIALIZED_NAME_WORK_PHONE_SANITIZED = "workPhoneSanitized";
  @SerializedName(SERIALIZED_NAME_WORK_PHONE_SANITIZED)
  private String workPhoneSanitized;

  public static final String SERIALIZED_NAME_HIRE_DATE = "hireDate";
  @SerializedName(SERIALIZED_NAME_HIRE_DATE)
  private OffsetDateTime hireDate;

  public static final String SERIALIZED_NAME_END_DATE = "endDate";
  @SerializedName(SERIALIZED_NAME_END_DATE)
  private OffsetDateTime endDate;

  public static final String SERIALIZED_NAME_HAS_OCCUPATIONAL_PENSION = "hasOccupationalPension";
  @SerializedName(SERIALIZED_NAME_HAS_OCCUPATIONAL_PENSION)
  private Boolean hasOccupationalPension;

  public static final String SERIALIZED_NAME_PRIVATE_EMAIL = "privateEmail";
  @SerializedName(SERIALIZED_NAME_PRIVATE_EMAIL)
  private String privateEmail;

  public static final String SERIALIZED_NAME_FIRST_NAME = "firstName";
  @SerializedName(SERIALIZED_NAME_FIRST_NAME)
  private String firstName;

  public static final String SERIALIZED_NAME_LAST_NAME = "lastName";
  @SerializedName(SERIALIZED_NAME_LAST_NAME)
  private String lastName;

  public static final String SERIALIZED_NAME_SSN = "ssn";
  @SerializedName(SERIALIZED_NAME_SSN)
  private String ssn;

  public static final String SERIALIZED_NAME_PRIVATE_PHONE = "privatePhone";
  @SerializedName(SERIALIZED_NAME_PRIVATE_PHONE)
  private String privatePhone;

  public static final String SERIALIZED_NAME_PRIVATE_PHONE_SANITIZED = "privatePhoneSanitized";
  @SerializedName(SERIALIZED_NAME_PRIVATE_PHONE_SANITIZED)
  private String privatePhoneSanitized;

  public static final String SERIALIZED_NAME_BIRTH_DATE = "birthDate";
  @SerializedName(SERIALIZED_NAME_BIRTH_DATE)
  private OffsetDateTime birthDate;

  public static final String SERIALIZED_NAME_AGE = "age";
  @SerializedName(SERIALIZED_NAME_AGE)
  private Double age;

  public static final String SERIALIZED_NAME_AVATAR_URL = "avatarUrl";
  @SerializedName(SERIALIZED_NAME_AVATAR_URL)
  private String avatarUrl;

  public static final String SERIALIZED_NAME_NATIONALITY = "nationality";
  @SerializedName(SERIALIZED_NAME_NATIONALITY)
  private String nationality;

  public static final String SERIALIZED_NAME_GENDER = "gender";
  @SerializedName(SERIALIZED_NAME_GENDER)
  private String gender;

  public static final String SERIALIZED_NAME_PRONOUN = "pronoun";
  @SerializedName(SERIALIZED_NAME_PRONOUN)
  private String pronoun;

  public static final String SERIALIZED_NAME_BANK_ACCOUNT = "bankAccount";
  @SerializedName(SERIALIZED_NAME_BANK_ACCOUNT)
  private BankAccountResponse bankAccount;

  public static final String SERIALIZED_NAME_HOME_ADDRESS = "homeAddress";
  @SerializedName(SERIALIZED_NAME_HOME_ADDRESS)
  private HomeAddressResponse homeAddress;

  public static final String SERIALIZED_NAME_CUSTOM = "custom";
  @SerializedName(SERIALIZED_NAME_CUSTOM)
  private Object custom;

  public static final String SERIALIZED_NAME_CREATED = "created";
  @SerializedName(SERIALIZED_NAME_CREATED)
  private OffsetDateTime created;

  public static final String SERIALIZED_NAME_UPDATED = "updated";
  @SerializedName(SERIALIZED_NAME_UPDATED)
  private OffsetDateTime updated;

  public EmployeeResponse() {
  }

  public EmployeeResponse title(String title) {
    
    
    
    
    this.title = title;
    return this;
  }

   /**
   * Get title
   * @return title
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getTitle() {
    return title;
  }


  public void setTitle(String title) {
    
    
    
    this.title = title;
  }


  public EmployeeResponse id(String id) {
    
    
    
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "507f1f77bcf86cd799439011", required = true, value = "")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    
    
    
    this.id = id;
  }


  public EmployeeResponse active(Boolean active) {
    
    
    
    
    this.active = active;
    return this;
  }

   /**
   * Get active
   * @return active
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getActive() {
    return active;
  }


  public void setActive(Boolean active) {
    
    
    
    this.active = active;
  }


  public EmployeeResponse companyId(String companyId) {
    
    
    
    
    this.companyId = companyId;
    return this;
  }

   /**
   * Get companyId
   * @return companyId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "507f1f77bcf86cd799439011", required = true, value = "")

  public String getCompanyId() {
    return companyId;
  }


  public void setCompanyId(String companyId) {
    
    
    
    this.companyId = companyId;
  }


  public EmployeeResponse officeId(String officeId) {
    
    
    
    
    this.officeId = officeId;
    return this;
  }

   /**
   * Get officeId
   * @return officeId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "507f1f77bcf86cd799439011", value = "")

  public String getOfficeId() {
    return officeId;
  }


  public void setOfficeId(String officeId) {
    
    
    
    this.officeId = officeId;
  }


  public EmployeeResponse managerEmployeeId(String managerEmployeeId) {
    
    
    
    
    this.managerEmployeeId = managerEmployeeId;
    return this;
  }

   /**
   * Get managerEmployeeId
   * @return managerEmployeeId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "507f1f77bcf86cd799439011", value = "")

  public String getManagerEmployeeId() {
    return managerEmployeeId;
  }


  public void setManagerEmployeeId(String managerEmployeeId) {
    
    
    
    this.managerEmployeeId = managerEmployeeId;
  }


  public EmployeeResponse departmentId(String departmentId) {
    
    
    
    
    this.departmentId = departmentId;
    return this;
  }

   /**
   * Get departmentId
   * @return departmentId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "507f1f77bcf86cd799439011", value = "")

  public String getDepartmentId() {
    return departmentId;
  }


  public void setDepartmentId(String departmentId) {
    
    
    
    this.departmentId = departmentId;
  }


  public EmployeeResponse costCenterId(String costCenterId) {
    
    
    
    
    this.costCenterId = costCenterId;
    return this;
  }

   /**
   * Get costCenterId
   * @return costCenterId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "507f1f77bcf86cd799439011", value = "")

  public String getCostCenterId() {
    return costCenterId;
  }


  public void setCostCenterId(String costCenterId) {
    
    
    
    this.costCenterId = costCenterId;
  }


  public EmployeeResponse employmentId(String employmentId) {
    
    
    
    
    this.employmentId = employmentId;
    return this;
  }

   /**
   * Get employmentId
   * @return employmentId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "507f1f77bcf86cd799439011", value = "")

  public String getEmploymentId() {
    return employmentId;
  }


  public void setEmploymentId(String employmentId) {
    
    
    
    this.employmentId = employmentId;
  }


  public EmployeeResponse employmentTypeId(String employmentTypeId) {
    
    
    
    
    this.employmentTypeId = employmentTypeId;
    return this;
  }

   /**
   * Get employmentTypeId
   * @return employmentTypeId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "507f1f77bcf86cd799439011", value = "")

  public String getEmploymentTypeId() {
    return employmentTypeId;
  }


  public void setEmploymentTypeId(String employmentTypeId) {
    
    
    
    this.employmentTypeId = employmentTypeId;
  }


  public EmployeeResponse employmentCountry(String employmentCountry) {
    
    
    
    
    this.employmentCountry = employmentCountry;
    return this;
  }

   /**
   * Get employmentCountry
   * @return employmentCountry
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "SE", value = "")

  public String getEmploymentCountry() {
    return employmentCountry;
  }


  public void setEmploymentCountry(String employmentCountry) {
    
    
    
    this.employmentCountry = employmentCountry;
  }


  public EmployeeResponse compensationId(String compensationId) {
    
    
    
    
    this.compensationId = compensationId;
    return this;
  }

   /**
   * Get compensationId
   * @return compensationId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "507f1f77bcf86cd799439011", value = "")

  public String getCompensationId() {
    return compensationId;
  }


  public void setCompensationId(String compensationId) {
    
    
    
    this.compensationId = compensationId;
  }


  public EmployeeResponse userId(String userId) {
    
    
    
    
    this.userId = userId;
    return this;
  }

   /**
   * Get userId
   * @return userId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "507f1f77bcf86cd799439011", required = true, value = "")

  public String getUserId() {
    return userId;
  }


  public void setUserId(String userId) {
    
    
    
    this.userId = userId;
  }


  public EmployeeResponse userName(String userName) {
    
    
    
    
    this.userName = userName;
    return this;
  }

   /**
   * Get userName
   * @return userName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "john.doe@example.com", value = "")

  public String getUserName() {
    return userName;
  }


  public void setUserName(String userName) {
    
    
    
    this.userName = userName;
  }


  public EmployeeResponse division(String division) {
    
    
    
    
    this.division = division;
    return this;
  }

   /**
   * Get division
   * @return division
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Division 1", value = "")

  public String getDivision() {
    return division;
  }


  public void setDivision(String division) {
    
    
    
    this.division = division;
  }


  public EmployeeResponse organization(String organization) {
    
    
    
    
    this.organization = organization;
    return this;
  }

   /**
   * Get organization
   * @return organization
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Organization 1", value = "")

  public String getOrganization() {
    return organization;
  }


  public void setOrganization(String organization) {
    
    
    
    this.organization = organization;
  }


  public EmployeeResponse tax(EmployeeTaxResponse tax) {
    
    
    
    
    this.tax = tax;
    return this;
  }

   /**
   * Get tax
   * @return tax
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public EmployeeTaxResponse getTax() {
    return tax;
  }


  public void setTax(EmployeeTaxResponse tax) {
    
    
    
    this.tax = tax;
  }


  public EmployeeResponse employeeNumber(String employeeNumber) {
    
    
    
    
    this.employeeNumber = employeeNumber;
    return this;
  }

   /**
   * Get employeeNumber
   * @return employeeNumber
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getEmployeeNumber() {
    return employeeNumber;
  }


  public void setEmployeeNumber(String employeeNumber) {
    
    
    
    this.employeeNumber = employeeNumber;
  }


  public EmployeeResponse workEmail(String workEmail) {
    
    
    
    
    this.workEmail = workEmail;
    return this;
  }

   /**
   * Get workEmail
   * @return workEmail
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getWorkEmail() {
    return workEmail;
  }


  public void setWorkEmail(String workEmail) {
    
    
    
    this.workEmail = workEmail;
  }


  public EmployeeResponse workPhone(String workPhone) {
    
    
    
    
    this.workPhone = workPhone;
    return this;
  }

   /**
   * Get workPhone
   * @return workPhone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getWorkPhone() {
    return workPhone;
  }


  public void setWorkPhone(String workPhone) {
    
    
    
    this.workPhone = workPhone;
  }


  public EmployeeResponse workPhoneSanitized(String workPhoneSanitized) {
    
    
    
    
    this.workPhoneSanitized = workPhoneSanitized;
    return this;
  }

   /**
   * Get workPhoneSanitized
   * @return workPhoneSanitized
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getWorkPhoneSanitized() {
    return workPhoneSanitized;
  }


  public void setWorkPhoneSanitized(String workPhoneSanitized) {
    
    
    
    this.workPhoneSanitized = workPhoneSanitized;
  }


  public EmployeeResponse hireDate(OffsetDateTime hireDate) {
    
    
    
    
    this.hireDate = hireDate;
    return this;
  }

   /**
   * Get hireDate
   * @return hireDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getHireDate() {
    return hireDate;
  }


  public void setHireDate(OffsetDateTime hireDate) {
    
    
    
    this.hireDate = hireDate;
  }


  public EmployeeResponse endDate(OffsetDateTime endDate) {
    
    
    
    
    this.endDate = endDate;
    return this;
  }

   /**
   * Get endDate
   * @return endDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getEndDate() {
    return endDate;
  }


  public void setEndDate(OffsetDateTime endDate) {
    
    
    
    this.endDate = endDate;
  }


  public EmployeeResponse hasOccupationalPension(Boolean hasOccupationalPension) {
    
    
    
    
    this.hasOccupationalPension = hasOccupationalPension;
    return this;
  }

   /**
   * Get hasOccupationalPension
   * @return hasOccupationalPension
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getHasOccupationalPension() {
    return hasOccupationalPension;
  }


  public void setHasOccupationalPension(Boolean hasOccupationalPension) {
    
    
    
    this.hasOccupationalPension = hasOccupationalPension;
  }


  public EmployeeResponse privateEmail(String privateEmail) {
    
    
    
    
    this.privateEmail = privateEmail;
    return this;
  }

   /**
   * Get privateEmail
   * @return privateEmail
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPrivateEmail() {
    return privateEmail;
  }


  public void setPrivateEmail(String privateEmail) {
    
    
    
    this.privateEmail = privateEmail;
  }


  public EmployeeResponse firstName(String firstName) {
    
    
    
    
    this.firstName = firstName;
    return this;
  }

   /**
   * Get firstName
   * @return firstName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getFirstName() {
    return firstName;
  }


  public void setFirstName(String firstName) {
    
    
    
    this.firstName = firstName;
  }


  public EmployeeResponse lastName(String lastName) {
    
    
    
    
    this.lastName = lastName;
    return this;
  }

   /**
   * Get lastName
   * @return lastName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getLastName() {
    return lastName;
  }


  public void setLastName(String lastName) {
    
    
    
    this.lastName = lastName;
  }


  public EmployeeResponse ssn(String ssn) {
    
    
    
    
    this.ssn = ssn;
    return this;
  }

   /**
   * Get ssn
   * @return ssn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSsn() {
    return ssn;
  }


  public void setSsn(String ssn) {
    
    
    
    this.ssn = ssn;
  }


  public EmployeeResponse privatePhone(String privatePhone) {
    
    
    
    
    this.privatePhone = privatePhone;
    return this;
  }

   /**
   * Get privatePhone
   * @return privatePhone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPrivatePhone() {
    return privatePhone;
  }


  public void setPrivatePhone(String privatePhone) {
    
    
    
    this.privatePhone = privatePhone;
  }


  public EmployeeResponse privatePhoneSanitized(String privatePhoneSanitized) {
    
    
    
    
    this.privatePhoneSanitized = privatePhoneSanitized;
    return this;
  }

   /**
   * Get privatePhoneSanitized
   * @return privatePhoneSanitized
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPrivatePhoneSanitized() {
    return privatePhoneSanitized;
  }


  public void setPrivatePhoneSanitized(String privatePhoneSanitized) {
    
    
    
    this.privatePhoneSanitized = privatePhoneSanitized;
  }


  public EmployeeResponse birthDate(OffsetDateTime birthDate) {
    
    
    
    
    this.birthDate = birthDate;
    return this;
  }

   /**
   * Get birthDate
   * @return birthDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getBirthDate() {
    return birthDate;
  }


  public void setBirthDate(OffsetDateTime birthDate) {
    
    
    
    this.birthDate = birthDate;
  }


  public EmployeeResponse age(Double age) {
    
    
    
    
    this.age = age;
    return this;
  }

  public EmployeeResponse age(Integer age) {
    
    
    
    
    this.age = age.doubleValue();
    return this;
  }

   /**
   * Get age
   * @return age
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getAge() {
    return age;
  }


  public void setAge(Double age) {
    
    
    
    this.age = age;
  }


  public EmployeeResponse avatarUrl(String avatarUrl) {
    
    
    
    
    this.avatarUrl = avatarUrl;
    return this;
  }

   /**
   * Get avatarUrl
   * @return avatarUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAvatarUrl() {
    return avatarUrl;
  }


  public void setAvatarUrl(String avatarUrl) {
    
    
    
    this.avatarUrl = avatarUrl;
  }


  public EmployeeResponse nationality(String nationality) {
    
    
    
    
    this.nationality = nationality;
    return this;
  }

   /**
   * Get nationality
   * @return nationality
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getNationality() {
    return nationality;
  }


  public void setNationality(String nationality) {
    
    
    
    this.nationality = nationality;
  }


  public EmployeeResponse gender(String gender) {
    
    
    
    
    this.gender = gender;
    return this;
  }

   /**
   * Get gender
   * @return gender
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getGender() {
    return gender;
  }


  public void setGender(String gender) {
    
    
    
    this.gender = gender;
  }


  public EmployeeResponse pronoun(String pronoun) {
    
    
    
    
    this.pronoun = pronoun;
    return this;
  }

   /**
   * Get pronoun
   * @return pronoun
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPronoun() {
    return pronoun;
  }


  public void setPronoun(String pronoun) {
    
    
    
    this.pronoun = pronoun;
  }


  public EmployeeResponse bankAccount(BankAccountResponse bankAccount) {
    
    
    
    
    this.bankAccount = bankAccount;
    return this;
  }

   /**
   * Get bankAccount
   * @return bankAccount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BankAccountResponse getBankAccount() {
    return bankAccount;
  }


  public void setBankAccount(BankAccountResponse bankAccount) {
    
    
    
    this.bankAccount = bankAccount;
  }


  public EmployeeResponse homeAddress(HomeAddressResponse homeAddress) {
    
    
    
    
    this.homeAddress = homeAddress;
    return this;
  }

   /**
   * Get homeAddress
   * @return homeAddress
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public HomeAddressResponse getHomeAddress() {
    return homeAddress;
  }


  public void setHomeAddress(HomeAddressResponse homeAddress) {
    
    
    
    this.homeAddress = homeAddress;
  }


  public EmployeeResponse custom(Object custom) {
    
    
    
    
    this.custom = custom;
    return this;
  }

   /**
   * Get custom
   * @return custom
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getCustom() {
    return custom;
  }


  public void setCustom(Object custom) {
    
    
    
    this.custom = custom;
  }


  public EmployeeResponse created(OffsetDateTime created) {
    
    
    
    
    this.created = created;
    return this;
  }

   /**
   * Get created
   * @return created
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public OffsetDateTime getCreated() {
    return created;
  }


  public void setCreated(OffsetDateTime created) {
    
    
    
    this.created = created;
  }


  public EmployeeResponse updated(OffsetDateTime updated) {
    
    
    
    
    this.updated = updated;
    return this;
  }

   /**
   * Get updated
   * @return updated
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public OffsetDateTime getUpdated() {
    return updated;
  }


  public void setUpdated(OffsetDateTime updated) {
    
    
    
    this.updated = updated;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the EmployeeResponse instance itself
   */
  public EmployeeResponse putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EmployeeResponse employeeResponse = (EmployeeResponse) o;
    return Objects.equals(this.title, employeeResponse.title) &&
        Objects.equals(this.id, employeeResponse.id) &&
        Objects.equals(this.active, employeeResponse.active) &&
        Objects.equals(this.companyId, employeeResponse.companyId) &&
        Objects.equals(this.officeId, employeeResponse.officeId) &&
        Objects.equals(this.managerEmployeeId, employeeResponse.managerEmployeeId) &&
        Objects.equals(this.departmentId, employeeResponse.departmentId) &&
        Objects.equals(this.costCenterId, employeeResponse.costCenterId) &&
        Objects.equals(this.employmentId, employeeResponse.employmentId) &&
        Objects.equals(this.employmentTypeId, employeeResponse.employmentTypeId) &&
        Objects.equals(this.employmentCountry, employeeResponse.employmentCountry) &&
        Objects.equals(this.compensationId, employeeResponse.compensationId) &&
        Objects.equals(this.userId, employeeResponse.userId) &&
        Objects.equals(this.userName, employeeResponse.userName) &&
        Objects.equals(this.division, employeeResponse.division) &&
        Objects.equals(this.organization, employeeResponse.organization) &&
        Objects.equals(this.tax, employeeResponse.tax) &&
        Objects.equals(this.employeeNumber, employeeResponse.employeeNumber) &&
        Objects.equals(this.workEmail, employeeResponse.workEmail) &&
        Objects.equals(this.workPhone, employeeResponse.workPhone) &&
        Objects.equals(this.workPhoneSanitized, employeeResponse.workPhoneSanitized) &&
        Objects.equals(this.hireDate, employeeResponse.hireDate) &&
        Objects.equals(this.endDate, employeeResponse.endDate) &&
        Objects.equals(this.hasOccupationalPension, employeeResponse.hasOccupationalPension) &&
        Objects.equals(this.privateEmail, employeeResponse.privateEmail) &&
        Objects.equals(this.firstName, employeeResponse.firstName) &&
        Objects.equals(this.lastName, employeeResponse.lastName) &&
        Objects.equals(this.ssn, employeeResponse.ssn) &&
        Objects.equals(this.privatePhone, employeeResponse.privatePhone) &&
        Objects.equals(this.privatePhoneSanitized, employeeResponse.privatePhoneSanitized) &&
        Objects.equals(this.birthDate, employeeResponse.birthDate) &&
        Objects.equals(this.age, employeeResponse.age) &&
        Objects.equals(this.avatarUrl, employeeResponse.avatarUrl) &&
        Objects.equals(this.nationality, employeeResponse.nationality) &&
        Objects.equals(this.gender, employeeResponse.gender) &&
        Objects.equals(this.pronoun, employeeResponse.pronoun) &&
        Objects.equals(this.bankAccount, employeeResponse.bankAccount) &&
        Objects.equals(this.homeAddress, employeeResponse.homeAddress) &&
        Objects.equals(this.custom, employeeResponse.custom) &&
        Objects.equals(this.created, employeeResponse.created) &&
        Objects.equals(this.updated, employeeResponse.updated)&&
        Objects.equals(this.additionalProperties, employeeResponse.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(title, id, active, companyId, officeId, managerEmployeeId, departmentId, costCenterId, employmentId, employmentTypeId, employmentCountry, compensationId, userId, userName, division, organization, tax, employeeNumber, workEmail, workPhone, workPhoneSanitized, hireDate, endDate, hasOccupationalPension, privateEmail, firstName, lastName, ssn, privatePhone, privatePhoneSanitized, birthDate, age, avatarUrl, nationality, gender, pronoun, bankAccount, homeAddress, custom, created, updated, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EmployeeResponse {\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    active: ").append(toIndentedString(active)).append("\n");
    sb.append("    companyId: ").append(toIndentedString(companyId)).append("\n");
    sb.append("    officeId: ").append(toIndentedString(officeId)).append("\n");
    sb.append("    managerEmployeeId: ").append(toIndentedString(managerEmployeeId)).append("\n");
    sb.append("    departmentId: ").append(toIndentedString(departmentId)).append("\n");
    sb.append("    costCenterId: ").append(toIndentedString(costCenterId)).append("\n");
    sb.append("    employmentId: ").append(toIndentedString(employmentId)).append("\n");
    sb.append("    employmentTypeId: ").append(toIndentedString(employmentTypeId)).append("\n");
    sb.append("    employmentCountry: ").append(toIndentedString(employmentCountry)).append("\n");
    sb.append("    compensationId: ").append(toIndentedString(compensationId)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    userName: ").append(toIndentedString(userName)).append("\n");
    sb.append("    division: ").append(toIndentedString(division)).append("\n");
    sb.append("    organization: ").append(toIndentedString(organization)).append("\n");
    sb.append("    tax: ").append(toIndentedString(tax)).append("\n");
    sb.append("    employeeNumber: ").append(toIndentedString(employeeNumber)).append("\n");
    sb.append("    workEmail: ").append(toIndentedString(workEmail)).append("\n");
    sb.append("    workPhone: ").append(toIndentedString(workPhone)).append("\n");
    sb.append("    workPhoneSanitized: ").append(toIndentedString(workPhoneSanitized)).append("\n");
    sb.append("    hireDate: ").append(toIndentedString(hireDate)).append("\n");
    sb.append("    endDate: ").append(toIndentedString(endDate)).append("\n");
    sb.append("    hasOccupationalPension: ").append(toIndentedString(hasOccupationalPension)).append("\n");
    sb.append("    privateEmail: ").append(toIndentedString(privateEmail)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    ssn: ").append(toIndentedString(ssn)).append("\n");
    sb.append("    privatePhone: ").append(toIndentedString(privatePhone)).append("\n");
    sb.append("    privatePhoneSanitized: ").append(toIndentedString(privatePhoneSanitized)).append("\n");
    sb.append("    birthDate: ").append(toIndentedString(birthDate)).append("\n");
    sb.append("    age: ").append(toIndentedString(age)).append("\n");
    sb.append("    avatarUrl: ").append(toIndentedString(avatarUrl)).append("\n");
    sb.append("    nationality: ").append(toIndentedString(nationality)).append("\n");
    sb.append("    gender: ").append(toIndentedString(gender)).append("\n");
    sb.append("    pronoun: ").append(toIndentedString(pronoun)).append("\n");
    sb.append("    bankAccount: ").append(toIndentedString(bankAccount)).append("\n");
    sb.append("    homeAddress: ").append(toIndentedString(homeAddress)).append("\n");
    sb.append("    custom: ").append(toIndentedString(custom)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    updated: ").append(toIndentedString(updated)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("title");
    openapiFields.add("id");
    openapiFields.add("active");
    openapiFields.add("companyId");
    openapiFields.add("officeId");
    openapiFields.add("managerEmployeeId");
    openapiFields.add("departmentId");
    openapiFields.add("costCenterId");
    openapiFields.add("employmentId");
    openapiFields.add("employmentTypeId");
    openapiFields.add("employmentCountry");
    openapiFields.add("compensationId");
    openapiFields.add("userId");
    openapiFields.add("userName");
    openapiFields.add("division");
    openapiFields.add("organization");
    openapiFields.add("tax");
    openapiFields.add("employeeNumber");
    openapiFields.add("workEmail");
    openapiFields.add("workPhone");
    openapiFields.add("workPhoneSanitized");
    openapiFields.add("hireDate");
    openapiFields.add("endDate");
    openapiFields.add("hasOccupationalPension");
    openapiFields.add("privateEmail");
    openapiFields.add("firstName");
    openapiFields.add("lastName");
    openapiFields.add("ssn");
    openapiFields.add("privatePhone");
    openapiFields.add("privatePhoneSanitized");
    openapiFields.add("birthDate");
    openapiFields.add("age");
    openapiFields.add("avatarUrl");
    openapiFields.add("nationality");
    openapiFields.add("gender");
    openapiFields.add("pronoun");
    openapiFields.add("bankAccount");
    openapiFields.add("homeAddress");
    openapiFields.add("custom");
    openapiFields.add("created");
    openapiFields.add("updated");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("id");
    openapiRequiredFields.add("active");
    openapiRequiredFields.add("companyId");
    openapiRequiredFields.add("userId");
    openapiRequiredFields.add("employeeNumber");
    openapiRequiredFields.add("created");
    openapiRequiredFields.add("updated");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to EmployeeResponse
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!EmployeeResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in EmployeeResponse is not found in the empty JSON string", EmployeeResponse.openapiRequiredFields.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : EmployeeResponse.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if ((jsonObj.get("title") != null && !jsonObj.get("title").isJsonNull()) && !jsonObj.get("title").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `title` to be a primitive type in the JSON string but got `%s`", jsonObj.get("title").toString()));
      }
      if (!jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if (!jsonObj.get("companyId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `companyId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("companyId").toString()));
      }
      if ((jsonObj.get("officeId") != null && !jsonObj.get("officeId").isJsonNull()) && !jsonObj.get("officeId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `officeId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("officeId").toString()));
      }
      if ((jsonObj.get("managerEmployeeId") != null && !jsonObj.get("managerEmployeeId").isJsonNull()) && !jsonObj.get("managerEmployeeId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `managerEmployeeId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("managerEmployeeId").toString()));
      }
      if ((jsonObj.get("departmentId") != null && !jsonObj.get("departmentId").isJsonNull()) && !jsonObj.get("departmentId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `departmentId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("departmentId").toString()));
      }
      if ((jsonObj.get("costCenterId") != null && !jsonObj.get("costCenterId").isJsonNull()) && !jsonObj.get("costCenterId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `costCenterId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("costCenterId").toString()));
      }
      if ((jsonObj.get("employmentId") != null && !jsonObj.get("employmentId").isJsonNull()) && !jsonObj.get("employmentId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `employmentId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("employmentId").toString()));
      }
      if ((jsonObj.get("employmentTypeId") != null && !jsonObj.get("employmentTypeId").isJsonNull()) && !jsonObj.get("employmentTypeId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `employmentTypeId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("employmentTypeId").toString()));
      }
      if ((jsonObj.get("employmentCountry") != null && !jsonObj.get("employmentCountry").isJsonNull()) && !jsonObj.get("employmentCountry").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `employmentCountry` to be a primitive type in the JSON string but got `%s`", jsonObj.get("employmentCountry").toString()));
      }
      if ((jsonObj.get("compensationId") != null && !jsonObj.get("compensationId").isJsonNull()) && !jsonObj.get("compensationId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `compensationId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("compensationId").toString()));
      }
      if (!jsonObj.get("userId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `userId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("userId").toString()));
      }
      if ((jsonObj.get("userName") != null && !jsonObj.get("userName").isJsonNull()) && !jsonObj.get("userName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `userName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("userName").toString()));
      }
      if ((jsonObj.get("division") != null && !jsonObj.get("division").isJsonNull()) && !jsonObj.get("division").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `division` to be a primitive type in the JSON string but got `%s`", jsonObj.get("division").toString()));
      }
      if ((jsonObj.get("organization") != null && !jsonObj.get("organization").isJsonNull()) && !jsonObj.get("organization").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `organization` to be a primitive type in the JSON string but got `%s`", jsonObj.get("organization").toString()));
      }
      // validate the optional field `tax`
      if (jsonObj.get("tax") != null && !jsonObj.get("tax").isJsonNull()) {
        EmployeeTaxResponse.validateJsonObject(jsonObj.getAsJsonObject("tax"));
      }
      if (!jsonObj.get("employeeNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `employeeNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("employeeNumber").toString()));
      }
      if ((jsonObj.get("workEmail") != null && !jsonObj.get("workEmail").isJsonNull()) && !jsonObj.get("workEmail").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `workEmail` to be a primitive type in the JSON string but got `%s`", jsonObj.get("workEmail").toString()));
      }
      if ((jsonObj.get("workPhone") != null && !jsonObj.get("workPhone").isJsonNull()) && !jsonObj.get("workPhone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `workPhone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("workPhone").toString()));
      }
      if ((jsonObj.get("workPhoneSanitized") != null && !jsonObj.get("workPhoneSanitized").isJsonNull()) && !jsonObj.get("workPhoneSanitized").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `workPhoneSanitized` to be a primitive type in the JSON string but got `%s`", jsonObj.get("workPhoneSanitized").toString()));
      }
      if ((jsonObj.get("privateEmail") != null && !jsonObj.get("privateEmail").isJsonNull()) && !jsonObj.get("privateEmail").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `privateEmail` to be a primitive type in the JSON string but got `%s`", jsonObj.get("privateEmail").toString()));
      }
      if ((jsonObj.get("firstName") != null && !jsonObj.get("firstName").isJsonNull()) && !jsonObj.get("firstName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `firstName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("firstName").toString()));
      }
      if ((jsonObj.get("lastName") != null && !jsonObj.get("lastName").isJsonNull()) && !jsonObj.get("lastName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lastName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lastName").toString()));
      }
      if ((jsonObj.get("ssn") != null && !jsonObj.get("ssn").isJsonNull()) && !jsonObj.get("ssn").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ssn` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ssn").toString()));
      }
      if ((jsonObj.get("privatePhone") != null && !jsonObj.get("privatePhone").isJsonNull()) && !jsonObj.get("privatePhone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `privatePhone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("privatePhone").toString()));
      }
      if ((jsonObj.get("privatePhoneSanitized") != null && !jsonObj.get("privatePhoneSanitized").isJsonNull()) && !jsonObj.get("privatePhoneSanitized").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `privatePhoneSanitized` to be a primitive type in the JSON string but got `%s`", jsonObj.get("privatePhoneSanitized").toString()));
      }
      if ((jsonObj.get("avatarUrl") != null && !jsonObj.get("avatarUrl").isJsonNull()) && !jsonObj.get("avatarUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `avatarUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("avatarUrl").toString()));
      }
      if ((jsonObj.get("nationality") != null && !jsonObj.get("nationality").isJsonNull()) && !jsonObj.get("nationality").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `nationality` to be a primitive type in the JSON string but got `%s`", jsonObj.get("nationality").toString()));
      }
      if ((jsonObj.get("gender") != null && !jsonObj.get("gender").isJsonNull()) && !jsonObj.get("gender").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `gender` to be a primitive type in the JSON string but got `%s`", jsonObj.get("gender").toString()));
      }
      if ((jsonObj.get("pronoun") != null && !jsonObj.get("pronoun").isJsonNull()) && !jsonObj.get("pronoun").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pronoun` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pronoun").toString()));
      }
      // validate the optional field `bankAccount`
      if (jsonObj.get("bankAccount") != null && !jsonObj.get("bankAccount").isJsonNull()) {
        BankAccountResponse.validateJsonObject(jsonObj.getAsJsonObject("bankAccount"));
      }
      // validate the optional field `homeAddress`
      if (jsonObj.get("homeAddress") != null && !jsonObj.get("homeAddress").isJsonNull()) {
        HomeAddressResponse.validateJsonObject(jsonObj.getAsJsonObject("homeAddress"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!EmployeeResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'EmployeeResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<EmployeeResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(EmployeeResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<EmployeeResponse>() {
           @Override
           public void write(JsonWriter out, EmployeeResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public EmployeeResponse read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             EmployeeResponse instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of EmployeeResponse given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of EmployeeResponse
  * @throws IOException if the JSON string is invalid with respect to EmployeeResponse
  */
  public static EmployeeResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, EmployeeResponse.class);
  }

 /**
  * Convert an instance of EmployeeResponse to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

