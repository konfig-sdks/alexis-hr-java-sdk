/*
 * AlexisHR API
 * <h1 id=\"introduction\">Introduction</h1>  <p>    AlexisHR API is currently in preview. This means that small, backward    incompatible changes might be introduced while in preview. The changes will be    documented and communicated.    <a      href=\"https://cdn.forms-content.sg-form.com/56c6a65c-90a2-11eb-a700-a6de1aea3a1a\"      target=\"_blank\"      ><button>Subscribe to updates</button></a    >  </p>    <h1 id=\"authentication\">Authentication</h1>  <pre class=\"click-to-expand-wrapper is-snippet-wrapper language-undefined\">  <code class=\"is-highlighted language-bash\">curl https://api.alexishr.com/v1/employee \\    -H \"Authorization: Bearer &lt;your_access_token&gt;\"</code>  </pre>  <p>    Authenticate your account when using the API by including your secret Access    Token in the request.    <a href=\"https://app.alexishr.com/access-tokens\">Manage your Access Tokens</a    >.  </p>  <p>    Authentication is performed by passing the Access Token in the Authorization    header.  </p>  <hr />    <h1 id=\"structure\">Structure</h1>  <p>    You will find the structure of the API to be highly uniform and consistent.    Typically every resource can be accessed via a top level endpoint, such as    <code>/v1/employee</code>. For every such resource, you can perform some of    the following operations:  </p>  <h2>Operations</h2>  <table>    <tr>      <td>GET /v1/:resource</td>      <td>List all objects of this type</td>    </tr>    <tr>      <td>GET /v1/:resource/:id</td>      <td>Retrieve a resource by id</td>    </tr>    <tr>      <td>POST /v1/:resource</td>      <td>Create a resource of this type</td>    </tr>    <tr>      <td>PATCH /v1/:resource/:id</td>      <td>Update the resource by id</td>    </tr>    <tr>      <td>DELETE /v1/:resource/:id</td>      <td>Delete the resource by id</td>    </tr>  </table>  <hr />    <h1 id=\"roles\">Roles</h1>  <p>The Access Tokens will have owner permission on the account</p>  <hr />    <h1 id=\"filters\">Filters</h1>  <p>    Some of the list endpoints allow to filter results by certain conditions.    Refer to specific resources to find out what criteria are allowed. Below is a    list of the different conditions.  </p>    <h4 id=\"eq\"><code>$eq</code></h4>  <p>Find all results matching the attribute value specified.</p>  <div>    <pre><code class=\"language-shell\" data-lang=\"shell\">GET /v1/example?filters[fieldName][$eq]=value</code></pre>  </div>  <p>Can also be simplified like this.</p>  <div>    <pre><code class=\"language-shell\" data-lang=\"shell\">GET /v1/example?filters[fieldName]=value</code></pre>  </div>    <h4 id=\"neq\"><code>$neq</code></h4>  <p>Find all results not matching the attribute value specified.</p>  <div>    <pre><code class=\"language-shell\" data-lang=\"shell\">GET /v1/example?filters[fieldName][$neq]=value</code></pre>  </div>    <h4 id=\"gt\"><code>$gt</code>, <code>$gte</code></h4>  <p>    Find all results where the value is more (<code>$gt</code>) or more and equal    (<code>$gte</code>) to a given value.  </p>  <div>    <pre><code class=\"language-shell\" data-lang=\"shell\">GET /v1/example?filters[startDate][$gte]=2020-01-01</code></pre>  </div>  <hr />    <h4 id=\"lt\"><code>$lt</code>, <code>$lte</code></h4>  <p>    Find all results where the value is less (<code>$lt</code>) or less and equal    (<code>$lte</code>) to a given value.  </p>  <div>    <pre><code class=\"language-shell\" data-lang=\"shell\">GET /v1/example?filters[startDate][$lte]=2020-01-01</code></pre>  </div>  <hr />    <h4 id=\"in\"><code>$in</code>, <code>$nin</code></h4>  <p>    Find all results matching (<code>$in</code>) or not matching    (<code>$nin</code>) any of the attribute values specified.  </p>  <div>    <pre><code class=\"language-shell\" data-lang=\"shell\">GET /v1/example?filters[fieldName][$in][]=value1&filters[fieldName][$in][]=value2</code></pre>  </div>  <hr />    <h4 id=\"between\"><code>$between</code></h4>  <p>Find all results between two values specified.</p>  <div>    <pre><code class=\"language-shell\" data-lang=\"shell\">GET /v1/example?filters[startDate][$between][]=2020-01-01&filters[startDate][$between][]=2020-12-31</code></pre>  </div>  <hr />    <h1 id=\"versioning\">Versioning</h1>  <p>    Each version of the API is guaranteed to be compatible with the resources of    the same version. When we make breaking changes to the API a new version will    be published  </p>  <hr />    <h1 id=\"changelog\">Changelog</h1>  <h3>2023-12-20</h3>  <p>Field [updated] added for filter & select for Get Many Employments and Get Many Employees.</p>  <h3>2021-03-15</h3>  <p>First draft was published</p>  <hr />   # Authentication  <!-- ReDoc-Inject: <security-definitions> -->
 *
 * The version of the OpenAPI document: v1-preview
 * Contact: support@alexishr.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.CompanyListManyCompaniesFiltersParameterId;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * EmployeeListManyEmployeesFiltersParameter
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class EmployeeListManyEmployeesFiltersParameter {
  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private CompanyListManyCompaniesFiltersParameterId title;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private CompanyListManyCompaniesFiltersParameterId id;

  public static final String SERIALIZED_NAME_ACTIVE = "active";
  @SerializedName(SERIALIZED_NAME_ACTIVE)
  private CompanyListManyCompaniesFiltersParameterId active;

  public static final String SERIALIZED_NAME_COMPANY_ID = "companyId";
  @SerializedName(SERIALIZED_NAME_COMPANY_ID)
  private CompanyListManyCompaniesFiltersParameterId companyId;

  public static final String SERIALIZED_NAME_OFFICE_ID = "officeId";
  @SerializedName(SERIALIZED_NAME_OFFICE_ID)
  private CompanyListManyCompaniesFiltersParameterId officeId;

  public static final String SERIALIZED_NAME_MANAGER_EMPLOYEE_ID = "managerEmployeeId";
  @SerializedName(SERIALIZED_NAME_MANAGER_EMPLOYEE_ID)
  private CompanyListManyCompaniesFiltersParameterId managerEmployeeId;

  public static final String SERIALIZED_NAME_DEPARTMENT_ID = "departmentId";
  @SerializedName(SERIALIZED_NAME_DEPARTMENT_ID)
  private CompanyListManyCompaniesFiltersParameterId departmentId;

  public static final String SERIALIZED_NAME_COST_CENTER_ID = "costCenterId";
  @SerializedName(SERIALIZED_NAME_COST_CENTER_ID)
  private CompanyListManyCompaniesFiltersParameterId costCenterId;

  public static final String SERIALIZED_NAME_EMPLOYMENT_ID = "employmentId";
  @SerializedName(SERIALIZED_NAME_EMPLOYMENT_ID)
  private CompanyListManyCompaniesFiltersParameterId employmentId;

  public static final String SERIALIZED_NAME_EMPLOYMENT_TYPE_ID = "employmentTypeId";
  @SerializedName(SERIALIZED_NAME_EMPLOYMENT_TYPE_ID)
  private CompanyListManyCompaniesFiltersParameterId employmentTypeId;

  public static final String SERIALIZED_NAME_EMPLOYMENT_COUNTRY = "employmentCountry";
  @SerializedName(SERIALIZED_NAME_EMPLOYMENT_COUNTRY)
  private CompanyListManyCompaniesFiltersParameterId employmentCountry;

  public static final String SERIALIZED_NAME_COMPENSATION_ID = "compensationId";
  @SerializedName(SERIALIZED_NAME_COMPENSATION_ID)
  private CompanyListManyCompaniesFiltersParameterId compensationId;

  public static final String SERIALIZED_NAME_USER_ID = "userId";
  @SerializedName(SERIALIZED_NAME_USER_ID)
  private CompanyListManyCompaniesFiltersParameterId userId;

  public static final String SERIALIZED_NAME_USER_NAME = "userName";
  @SerializedName(SERIALIZED_NAME_USER_NAME)
  private CompanyListManyCompaniesFiltersParameterId userName;

  public static final String SERIALIZED_NAME_DIVISION = "division";
  @SerializedName(SERIALIZED_NAME_DIVISION)
  private CompanyListManyCompaniesFiltersParameterId division;

  public static final String SERIALIZED_NAME_ORGANIZATION = "organization";
  @SerializedName(SERIALIZED_NAME_ORGANIZATION)
  private CompanyListManyCompaniesFiltersParameterId organization;

  public static final String SERIALIZED_NAME_EMPLOYEE_NUMBER = "employeeNumber";
  @SerializedName(SERIALIZED_NAME_EMPLOYEE_NUMBER)
  private CompanyListManyCompaniesFiltersParameterId employeeNumber;

  public static final String SERIALIZED_NAME_WORK_EMAIL = "workEmail";
  @SerializedName(SERIALIZED_NAME_WORK_EMAIL)
  private CompanyListManyCompaniesFiltersParameterId workEmail;

  public static final String SERIALIZED_NAME_WORK_PHONE = "workPhone";
  @SerializedName(SERIALIZED_NAME_WORK_PHONE)
  private CompanyListManyCompaniesFiltersParameterId workPhone;

  public static final String SERIALIZED_NAME_WORK_PHONE_SANITIZED = "workPhoneSanitized";
  @SerializedName(SERIALIZED_NAME_WORK_PHONE_SANITIZED)
  private CompanyListManyCompaniesFiltersParameterId workPhoneSanitized;

  public static final String SERIALIZED_NAME_HIRE_DATE = "hireDate";
  @SerializedName(SERIALIZED_NAME_HIRE_DATE)
  private CompanyListManyCompaniesFiltersParameterId hireDate;

  public static final String SERIALIZED_NAME_END_DATE = "endDate";
  @SerializedName(SERIALIZED_NAME_END_DATE)
  private CompanyListManyCompaniesFiltersParameterId endDate;

  public static final String SERIALIZED_NAME_HAS_OCCUPATIONAL_PENSION = "hasOccupationalPension";
  @SerializedName(SERIALIZED_NAME_HAS_OCCUPATIONAL_PENSION)
  private CompanyListManyCompaniesFiltersParameterId hasOccupationalPension;

  public static final String SERIALIZED_NAME_PRIVATE_EMAIL = "privateEmail";
  @SerializedName(SERIALIZED_NAME_PRIVATE_EMAIL)
  private CompanyListManyCompaniesFiltersParameterId privateEmail;

  public static final String SERIALIZED_NAME_FIRST_NAME = "firstName";
  @SerializedName(SERIALIZED_NAME_FIRST_NAME)
  private CompanyListManyCompaniesFiltersParameterId firstName;

  public static final String SERIALIZED_NAME_LAST_NAME = "lastName";
  @SerializedName(SERIALIZED_NAME_LAST_NAME)
  private CompanyListManyCompaniesFiltersParameterId lastName;

  public static final String SERIALIZED_NAME_SSN = "ssn";
  @SerializedName(SERIALIZED_NAME_SSN)
  private CompanyListManyCompaniesFiltersParameterId ssn;

  public static final String SERIALIZED_NAME_PRIVATE_PHONE = "privatePhone";
  @SerializedName(SERIALIZED_NAME_PRIVATE_PHONE)
  private CompanyListManyCompaniesFiltersParameterId privatePhone;

  public static final String SERIALIZED_NAME_PRIVATE_PHONE_SANITIZED = "privatePhoneSanitized";
  @SerializedName(SERIALIZED_NAME_PRIVATE_PHONE_SANITIZED)
  private CompanyListManyCompaniesFiltersParameterId privatePhoneSanitized;

  public static final String SERIALIZED_NAME_BIRTH_DATE = "birthDate";
  @SerializedName(SERIALIZED_NAME_BIRTH_DATE)
  private CompanyListManyCompaniesFiltersParameterId birthDate;

  public static final String SERIALIZED_NAME_AGE = "age";
  @SerializedName(SERIALIZED_NAME_AGE)
  private CompanyListManyCompaniesFiltersParameterId age;

  public static final String SERIALIZED_NAME_NATIONALITY = "nationality";
  @SerializedName(SERIALIZED_NAME_NATIONALITY)
  private CompanyListManyCompaniesFiltersParameterId nationality;

  public static final String SERIALIZED_NAME_GENDER = "gender";
  @SerializedName(SERIALIZED_NAME_GENDER)
  private CompanyListManyCompaniesFiltersParameterId gender;

  public static final String SERIALIZED_NAME_PRONOUN = "pronoun";
  @SerializedName(SERIALIZED_NAME_PRONOUN)
  private CompanyListManyCompaniesFiltersParameterId pronoun;

  public static final String SERIALIZED_NAME_CREATED = "created";
  @SerializedName(SERIALIZED_NAME_CREATED)
  private CompanyListManyCompaniesFiltersParameterId created;

  public static final String SERIALIZED_NAME_UPDATED = "updated";
  @SerializedName(SERIALIZED_NAME_UPDATED)
  private CompanyListManyCompaniesFiltersParameterId updated;

  public EmployeeListManyEmployeesFiltersParameter() {
  }

  public EmployeeListManyEmployeesFiltersParameter title(CompanyListManyCompaniesFiltersParameterId title) {
    
    
    
    
    this.title = title;
    return this;
  }

   /**
   * Get title
   * @return title
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CompanyListManyCompaniesFiltersParameterId getTitle() {
    return title;
  }


  public void setTitle(CompanyListManyCompaniesFiltersParameterId title) {
    
    
    
    this.title = title;
  }


  public EmployeeListManyEmployeesFiltersParameter id(CompanyListManyCompaniesFiltersParameterId id) {
    
    
    
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CompanyListManyCompaniesFiltersParameterId getId() {
    return id;
  }


  public void setId(CompanyListManyCompaniesFiltersParameterId id) {
    
    
    
    this.id = id;
  }


  public EmployeeListManyEmployeesFiltersParameter active(CompanyListManyCompaniesFiltersParameterId active) {
    
    
    
    
    this.active = active;
    return this;
  }

   /**
   * Get active
   * @return active
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CompanyListManyCompaniesFiltersParameterId getActive() {
    return active;
  }


  public void setActive(CompanyListManyCompaniesFiltersParameterId active) {
    
    
    
    this.active = active;
  }


  public EmployeeListManyEmployeesFiltersParameter companyId(CompanyListManyCompaniesFiltersParameterId companyId) {
    
    
    
    
    this.companyId = companyId;
    return this;
  }

   /**
   * Get companyId
   * @return companyId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CompanyListManyCompaniesFiltersParameterId getCompanyId() {
    return companyId;
  }


  public void setCompanyId(CompanyListManyCompaniesFiltersParameterId companyId) {
    
    
    
    this.companyId = companyId;
  }


  public EmployeeListManyEmployeesFiltersParameter officeId(CompanyListManyCompaniesFiltersParameterId officeId) {
    
    
    
    
    this.officeId = officeId;
    return this;
  }

   /**
   * Get officeId
   * @return officeId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CompanyListManyCompaniesFiltersParameterId getOfficeId() {
    return officeId;
  }


  public void setOfficeId(CompanyListManyCompaniesFiltersParameterId officeId) {
    
    
    
    this.officeId = officeId;
  }


  public EmployeeListManyEmployeesFiltersParameter managerEmployeeId(CompanyListManyCompaniesFiltersParameterId managerEmployeeId) {
    
    
    
    
    this.managerEmployeeId = managerEmployeeId;
    return this;
  }

   /**
   * Get managerEmployeeId
   * @return managerEmployeeId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CompanyListManyCompaniesFiltersParameterId getManagerEmployeeId() {
    return managerEmployeeId;
  }


  public void setManagerEmployeeId(CompanyListManyCompaniesFiltersParameterId managerEmployeeId) {
    
    
    
    this.managerEmployeeId = managerEmployeeId;
  }


  public EmployeeListManyEmployeesFiltersParameter departmentId(CompanyListManyCompaniesFiltersParameterId departmentId) {
    
    
    
    
    this.departmentId = departmentId;
    return this;
  }

   /**
   * Get departmentId
   * @return departmentId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CompanyListManyCompaniesFiltersParameterId getDepartmentId() {
    return departmentId;
  }


  public void setDepartmentId(CompanyListManyCompaniesFiltersParameterId departmentId) {
    
    
    
    this.departmentId = departmentId;
  }


  public EmployeeListManyEmployeesFiltersParameter costCenterId(CompanyListManyCompaniesFiltersParameterId costCenterId) {
    
    
    
    
    this.costCenterId = costCenterId;
    return this;
  }

   /**
   * Get costCenterId
   * @return costCenterId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CompanyListManyCompaniesFiltersParameterId getCostCenterId() {
    return costCenterId;
  }


  public void setCostCenterId(CompanyListManyCompaniesFiltersParameterId costCenterId) {
    
    
    
    this.costCenterId = costCenterId;
  }


  public EmployeeListManyEmployeesFiltersParameter employmentId(CompanyListManyCompaniesFiltersParameterId employmentId) {
    
    
    
    
    this.employmentId = employmentId;
    return this;
  }

   /**
   * Get employmentId
   * @return employmentId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CompanyListManyCompaniesFiltersParameterId getEmploymentId() {
    return employmentId;
  }


  public void setEmploymentId(CompanyListManyCompaniesFiltersParameterId employmentId) {
    
    
    
    this.employmentId = employmentId;
  }


  public EmployeeListManyEmployeesFiltersParameter employmentTypeId(CompanyListManyCompaniesFiltersParameterId employmentTypeId) {
    
    
    
    
    this.employmentTypeId = employmentTypeId;
    return this;
  }

   /**
   * Get employmentTypeId
   * @return employmentTypeId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CompanyListManyCompaniesFiltersParameterId getEmploymentTypeId() {
    return employmentTypeId;
  }


  public void setEmploymentTypeId(CompanyListManyCompaniesFiltersParameterId employmentTypeId) {
    
    
    
    this.employmentTypeId = employmentTypeId;
  }


  public EmployeeListManyEmployeesFiltersParameter employmentCountry(CompanyListManyCompaniesFiltersParameterId employmentCountry) {
    
    
    
    
    this.employmentCountry = employmentCountry;
    return this;
  }

   /**
   * Get employmentCountry
   * @return employmentCountry
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CompanyListManyCompaniesFiltersParameterId getEmploymentCountry() {
    return employmentCountry;
  }


  public void setEmploymentCountry(CompanyListManyCompaniesFiltersParameterId employmentCountry) {
    
    
    
    this.employmentCountry = employmentCountry;
  }


  public EmployeeListManyEmployeesFiltersParameter compensationId(CompanyListManyCompaniesFiltersParameterId compensationId) {
    
    
    
    
    this.compensationId = compensationId;
    return this;
  }

   /**
   * Get compensationId
   * @return compensationId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CompanyListManyCompaniesFiltersParameterId getCompensationId() {
    return compensationId;
  }


  public void setCompensationId(CompanyListManyCompaniesFiltersParameterId compensationId) {
    
    
    
    this.compensationId = compensationId;
  }


  public EmployeeListManyEmployeesFiltersParameter userId(CompanyListManyCompaniesFiltersParameterId userId) {
    
    
    
    
    this.userId = userId;
    return this;
  }

   /**
   * Get userId
   * @return userId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CompanyListManyCompaniesFiltersParameterId getUserId() {
    return userId;
  }


  public void setUserId(CompanyListManyCompaniesFiltersParameterId userId) {
    
    
    
    this.userId = userId;
  }


  public EmployeeListManyEmployeesFiltersParameter userName(CompanyListManyCompaniesFiltersParameterId userName) {
    
    
    
    
    this.userName = userName;
    return this;
  }

   /**
   * Get userName
   * @return userName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CompanyListManyCompaniesFiltersParameterId getUserName() {
    return userName;
  }


  public void setUserName(CompanyListManyCompaniesFiltersParameterId userName) {
    
    
    
    this.userName = userName;
  }


  public EmployeeListManyEmployeesFiltersParameter division(CompanyListManyCompaniesFiltersParameterId division) {
    
    
    
    
    this.division = division;
    return this;
  }

   /**
   * Get division
   * @return division
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CompanyListManyCompaniesFiltersParameterId getDivision() {
    return division;
  }


  public void setDivision(CompanyListManyCompaniesFiltersParameterId division) {
    
    
    
    this.division = division;
  }


  public EmployeeListManyEmployeesFiltersParameter organization(CompanyListManyCompaniesFiltersParameterId organization) {
    
    
    
    
    this.organization = organization;
    return this;
  }

   /**
   * Get organization
   * @return organization
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CompanyListManyCompaniesFiltersParameterId getOrganization() {
    return organization;
  }


  public void setOrganization(CompanyListManyCompaniesFiltersParameterId organization) {
    
    
    
    this.organization = organization;
  }


  public EmployeeListManyEmployeesFiltersParameter employeeNumber(CompanyListManyCompaniesFiltersParameterId employeeNumber) {
    
    
    
    
    this.employeeNumber = employeeNumber;
    return this;
  }

   /**
   * Get employeeNumber
   * @return employeeNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CompanyListManyCompaniesFiltersParameterId getEmployeeNumber() {
    return employeeNumber;
  }


  public void setEmployeeNumber(CompanyListManyCompaniesFiltersParameterId employeeNumber) {
    
    
    
    this.employeeNumber = employeeNumber;
  }


  public EmployeeListManyEmployeesFiltersParameter workEmail(CompanyListManyCompaniesFiltersParameterId workEmail) {
    
    
    
    
    this.workEmail = workEmail;
    return this;
  }

   /**
   * Get workEmail
   * @return workEmail
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CompanyListManyCompaniesFiltersParameterId getWorkEmail() {
    return workEmail;
  }


  public void setWorkEmail(CompanyListManyCompaniesFiltersParameterId workEmail) {
    
    
    
    this.workEmail = workEmail;
  }


  public EmployeeListManyEmployeesFiltersParameter workPhone(CompanyListManyCompaniesFiltersParameterId workPhone) {
    
    
    
    
    this.workPhone = workPhone;
    return this;
  }

   /**
   * Get workPhone
   * @return workPhone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CompanyListManyCompaniesFiltersParameterId getWorkPhone() {
    return workPhone;
  }


  public void setWorkPhone(CompanyListManyCompaniesFiltersParameterId workPhone) {
    
    
    
    this.workPhone = workPhone;
  }


  public EmployeeListManyEmployeesFiltersParameter workPhoneSanitized(CompanyListManyCompaniesFiltersParameterId workPhoneSanitized) {
    
    
    
    
    this.workPhoneSanitized = workPhoneSanitized;
    return this;
  }

   /**
   * Get workPhoneSanitized
   * @return workPhoneSanitized
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CompanyListManyCompaniesFiltersParameterId getWorkPhoneSanitized() {
    return workPhoneSanitized;
  }


  public void setWorkPhoneSanitized(CompanyListManyCompaniesFiltersParameterId workPhoneSanitized) {
    
    
    
    this.workPhoneSanitized = workPhoneSanitized;
  }


  public EmployeeListManyEmployeesFiltersParameter hireDate(CompanyListManyCompaniesFiltersParameterId hireDate) {
    
    
    
    
    this.hireDate = hireDate;
    return this;
  }

   /**
   * Get hireDate
   * @return hireDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CompanyListManyCompaniesFiltersParameterId getHireDate() {
    return hireDate;
  }


  public void setHireDate(CompanyListManyCompaniesFiltersParameterId hireDate) {
    
    
    
    this.hireDate = hireDate;
  }


  public EmployeeListManyEmployeesFiltersParameter endDate(CompanyListManyCompaniesFiltersParameterId endDate) {
    
    
    
    
    this.endDate = endDate;
    return this;
  }

   /**
   * Get endDate
   * @return endDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CompanyListManyCompaniesFiltersParameterId getEndDate() {
    return endDate;
  }


  public void setEndDate(CompanyListManyCompaniesFiltersParameterId endDate) {
    
    
    
    this.endDate = endDate;
  }


  public EmployeeListManyEmployeesFiltersParameter hasOccupationalPension(CompanyListManyCompaniesFiltersParameterId hasOccupationalPension) {
    
    
    
    
    this.hasOccupationalPension = hasOccupationalPension;
    return this;
  }

   /**
   * Get hasOccupationalPension
   * @return hasOccupationalPension
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CompanyListManyCompaniesFiltersParameterId getHasOccupationalPension() {
    return hasOccupationalPension;
  }


  public void setHasOccupationalPension(CompanyListManyCompaniesFiltersParameterId hasOccupationalPension) {
    
    
    
    this.hasOccupationalPension = hasOccupationalPension;
  }


  public EmployeeListManyEmployeesFiltersParameter privateEmail(CompanyListManyCompaniesFiltersParameterId privateEmail) {
    
    
    
    
    this.privateEmail = privateEmail;
    return this;
  }

   /**
   * Get privateEmail
   * @return privateEmail
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CompanyListManyCompaniesFiltersParameterId getPrivateEmail() {
    return privateEmail;
  }


  public void setPrivateEmail(CompanyListManyCompaniesFiltersParameterId privateEmail) {
    
    
    
    this.privateEmail = privateEmail;
  }


  public EmployeeListManyEmployeesFiltersParameter firstName(CompanyListManyCompaniesFiltersParameterId firstName) {
    
    
    
    
    this.firstName = firstName;
    return this;
  }

   /**
   * Get firstName
   * @return firstName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CompanyListManyCompaniesFiltersParameterId getFirstName() {
    return firstName;
  }


  public void setFirstName(CompanyListManyCompaniesFiltersParameterId firstName) {
    
    
    
    this.firstName = firstName;
  }


  public EmployeeListManyEmployeesFiltersParameter lastName(CompanyListManyCompaniesFiltersParameterId lastName) {
    
    
    
    
    this.lastName = lastName;
    return this;
  }

   /**
   * Get lastName
   * @return lastName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CompanyListManyCompaniesFiltersParameterId getLastName() {
    return lastName;
  }


  public void setLastName(CompanyListManyCompaniesFiltersParameterId lastName) {
    
    
    
    this.lastName = lastName;
  }


  public EmployeeListManyEmployeesFiltersParameter ssn(CompanyListManyCompaniesFiltersParameterId ssn) {
    
    
    
    
    this.ssn = ssn;
    return this;
  }

   /**
   * Get ssn
   * @return ssn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CompanyListManyCompaniesFiltersParameterId getSsn() {
    return ssn;
  }


  public void setSsn(CompanyListManyCompaniesFiltersParameterId ssn) {
    
    
    
    this.ssn = ssn;
  }


  public EmployeeListManyEmployeesFiltersParameter privatePhone(CompanyListManyCompaniesFiltersParameterId privatePhone) {
    
    
    
    
    this.privatePhone = privatePhone;
    return this;
  }

   /**
   * Get privatePhone
   * @return privatePhone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CompanyListManyCompaniesFiltersParameterId getPrivatePhone() {
    return privatePhone;
  }


  public void setPrivatePhone(CompanyListManyCompaniesFiltersParameterId privatePhone) {
    
    
    
    this.privatePhone = privatePhone;
  }


  public EmployeeListManyEmployeesFiltersParameter privatePhoneSanitized(CompanyListManyCompaniesFiltersParameterId privatePhoneSanitized) {
    
    
    
    
    this.privatePhoneSanitized = privatePhoneSanitized;
    return this;
  }

   /**
   * Get privatePhoneSanitized
   * @return privatePhoneSanitized
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CompanyListManyCompaniesFiltersParameterId getPrivatePhoneSanitized() {
    return privatePhoneSanitized;
  }


  public void setPrivatePhoneSanitized(CompanyListManyCompaniesFiltersParameterId privatePhoneSanitized) {
    
    
    
    this.privatePhoneSanitized = privatePhoneSanitized;
  }


  public EmployeeListManyEmployeesFiltersParameter birthDate(CompanyListManyCompaniesFiltersParameterId birthDate) {
    
    
    
    
    this.birthDate = birthDate;
    return this;
  }

   /**
   * Get birthDate
   * @return birthDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CompanyListManyCompaniesFiltersParameterId getBirthDate() {
    return birthDate;
  }


  public void setBirthDate(CompanyListManyCompaniesFiltersParameterId birthDate) {
    
    
    
    this.birthDate = birthDate;
  }


  public EmployeeListManyEmployeesFiltersParameter age(CompanyListManyCompaniesFiltersParameterId age) {
    
    
    
    
    this.age = age;
    return this;
  }

   /**
   * Get age
   * @return age
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CompanyListManyCompaniesFiltersParameterId getAge() {
    return age;
  }


  public void setAge(CompanyListManyCompaniesFiltersParameterId age) {
    
    
    
    this.age = age;
  }


  public EmployeeListManyEmployeesFiltersParameter nationality(CompanyListManyCompaniesFiltersParameterId nationality) {
    
    
    
    
    this.nationality = nationality;
    return this;
  }

   /**
   * Get nationality
   * @return nationality
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CompanyListManyCompaniesFiltersParameterId getNationality() {
    return nationality;
  }


  public void setNationality(CompanyListManyCompaniesFiltersParameterId nationality) {
    
    
    
    this.nationality = nationality;
  }


  public EmployeeListManyEmployeesFiltersParameter gender(CompanyListManyCompaniesFiltersParameterId gender) {
    
    
    
    
    this.gender = gender;
    return this;
  }

   /**
   * Get gender
   * @return gender
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CompanyListManyCompaniesFiltersParameterId getGender() {
    return gender;
  }


  public void setGender(CompanyListManyCompaniesFiltersParameterId gender) {
    
    
    
    this.gender = gender;
  }


  public EmployeeListManyEmployeesFiltersParameter pronoun(CompanyListManyCompaniesFiltersParameterId pronoun) {
    
    
    
    
    this.pronoun = pronoun;
    return this;
  }

   /**
   * Get pronoun
   * @return pronoun
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CompanyListManyCompaniesFiltersParameterId getPronoun() {
    return pronoun;
  }


  public void setPronoun(CompanyListManyCompaniesFiltersParameterId pronoun) {
    
    
    
    this.pronoun = pronoun;
  }


  public EmployeeListManyEmployeesFiltersParameter created(CompanyListManyCompaniesFiltersParameterId created) {
    
    
    
    
    this.created = created;
    return this;
  }

   /**
   * Get created
   * @return created
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CompanyListManyCompaniesFiltersParameterId getCreated() {
    return created;
  }


  public void setCreated(CompanyListManyCompaniesFiltersParameterId created) {
    
    
    
    this.created = created;
  }


  public EmployeeListManyEmployeesFiltersParameter updated(CompanyListManyCompaniesFiltersParameterId updated) {
    
    
    
    
    this.updated = updated;
    return this;
  }

   /**
   * Get updated
   * @return updated
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CompanyListManyCompaniesFiltersParameterId getUpdated() {
    return updated;
  }


  public void setUpdated(CompanyListManyCompaniesFiltersParameterId updated) {
    
    
    
    this.updated = updated;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the EmployeeListManyEmployeesFiltersParameter instance itself
   */
  public EmployeeListManyEmployeesFiltersParameter putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EmployeeListManyEmployeesFiltersParameter employeeListManyEmployeesFiltersParameter = (EmployeeListManyEmployeesFiltersParameter) o;
    return Objects.equals(this.title, employeeListManyEmployeesFiltersParameter.title) &&
        Objects.equals(this.id, employeeListManyEmployeesFiltersParameter.id) &&
        Objects.equals(this.active, employeeListManyEmployeesFiltersParameter.active) &&
        Objects.equals(this.companyId, employeeListManyEmployeesFiltersParameter.companyId) &&
        Objects.equals(this.officeId, employeeListManyEmployeesFiltersParameter.officeId) &&
        Objects.equals(this.managerEmployeeId, employeeListManyEmployeesFiltersParameter.managerEmployeeId) &&
        Objects.equals(this.departmentId, employeeListManyEmployeesFiltersParameter.departmentId) &&
        Objects.equals(this.costCenterId, employeeListManyEmployeesFiltersParameter.costCenterId) &&
        Objects.equals(this.employmentId, employeeListManyEmployeesFiltersParameter.employmentId) &&
        Objects.equals(this.employmentTypeId, employeeListManyEmployeesFiltersParameter.employmentTypeId) &&
        Objects.equals(this.employmentCountry, employeeListManyEmployeesFiltersParameter.employmentCountry) &&
        Objects.equals(this.compensationId, employeeListManyEmployeesFiltersParameter.compensationId) &&
        Objects.equals(this.userId, employeeListManyEmployeesFiltersParameter.userId) &&
        Objects.equals(this.userName, employeeListManyEmployeesFiltersParameter.userName) &&
        Objects.equals(this.division, employeeListManyEmployeesFiltersParameter.division) &&
        Objects.equals(this.organization, employeeListManyEmployeesFiltersParameter.organization) &&
        Objects.equals(this.employeeNumber, employeeListManyEmployeesFiltersParameter.employeeNumber) &&
        Objects.equals(this.workEmail, employeeListManyEmployeesFiltersParameter.workEmail) &&
        Objects.equals(this.workPhone, employeeListManyEmployeesFiltersParameter.workPhone) &&
        Objects.equals(this.workPhoneSanitized, employeeListManyEmployeesFiltersParameter.workPhoneSanitized) &&
        Objects.equals(this.hireDate, employeeListManyEmployeesFiltersParameter.hireDate) &&
        Objects.equals(this.endDate, employeeListManyEmployeesFiltersParameter.endDate) &&
        Objects.equals(this.hasOccupationalPension, employeeListManyEmployeesFiltersParameter.hasOccupationalPension) &&
        Objects.equals(this.privateEmail, employeeListManyEmployeesFiltersParameter.privateEmail) &&
        Objects.equals(this.firstName, employeeListManyEmployeesFiltersParameter.firstName) &&
        Objects.equals(this.lastName, employeeListManyEmployeesFiltersParameter.lastName) &&
        Objects.equals(this.ssn, employeeListManyEmployeesFiltersParameter.ssn) &&
        Objects.equals(this.privatePhone, employeeListManyEmployeesFiltersParameter.privatePhone) &&
        Objects.equals(this.privatePhoneSanitized, employeeListManyEmployeesFiltersParameter.privatePhoneSanitized) &&
        Objects.equals(this.birthDate, employeeListManyEmployeesFiltersParameter.birthDate) &&
        Objects.equals(this.age, employeeListManyEmployeesFiltersParameter.age) &&
        Objects.equals(this.nationality, employeeListManyEmployeesFiltersParameter.nationality) &&
        Objects.equals(this.gender, employeeListManyEmployeesFiltersParameter.gender) &&
        Objects.equals(this.pronoun, employeeListManyEmployeesFiltersParameter.pronoun) &&
        Objects.equals(this.created, employeeListManyEmployeesFiltersParameter.created) &&
        Objects.equals(this.updated, employeeListManyEmployeesFiltersParameter.updated)&&
        Objects.equals(this.additionalProperties, employeeListManyEmployeesFiltersParameter.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(title, id, active, companyId, officeId, managerEmployeeId, departmentId, costCenterId, employmentId, employmentTypeId, employmentCountry, compensationId, userId, userName, division, organization, employeeNumber, workEmail, workPhone, workPhoneSanitized, hireDate, endDate, hasOccupationalPension, privateEmail, firstName, lastName, ssn, privatePhone, privatePhoneSanitized, birthDate, age, nationality, gender, pronoun, created, updated, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EmployeeListManyEmployeesFiltersParameter {\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    active: ").append(toIndentedString(active)).append("\n");
    sb.append("    companyId: ").append(toIndentedString(companyId)).append("\n");
    sb.append("    officeId: ").append(toIndentedString(officeId)).append("\n");
    sb.append("    managerEmployeeId: ").append(toIndentedString(managerEmployeeId)).append("\n");
    sb.append("    departmentId: ").append(toIndentedString(departmentId)).append("\n");
    sb.append("    costCenterId: ").append(toIndentedString(costCenterId)).append("\n");
    sb.append("    employmentId: ").append(toIndentedString(employmentId)).append("\n");
    sb.append("    employmentTypeId: ").append(toIndentedString(employmentTypeId)).append("\n");
    sb.append("    employmentCountry: ").append(toIndentedString(employmentCountry)).append("\n");
    sb.append("    compensationId: ").append(toIndentedString(compensationId)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    userName: ").append(toIndentedString(userName)).append("\n");
    sb.append("    division: ").append(toIndentedString(division)).append("\n");
    sb.append("    organization: ").append(toIndentedString(organization)).append("\n");
    sb.append("    employeeNumber: ").append(toIndentedString(employeeNumber)).append("\n");
    sb.append("    workEmail: ").append(toIndentedString(workEmail)).append("\n");
    sb.append("    workPhone: ").append(toIndentedString(workPhone)).append("\n");
    sb.append("    workPhoneSanitized: ").append(toIndentedString(workPhoneSanitized)).append("\n");
    sb.append("    hireDate: ").append(toIndentedString(hireDate)).append("\n");
    sb.append("    endDate: ").append(toIndentedString(endDate)).append("\n");
    sb.append("    hasOccupationalPension: ").append(toIndentedString(hasOccupationalPension)).append("\n");
    sb.append("    privateEmail: ").append(toIndentedString(privateEmail)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    ssn: ").append(toIndentedString(ssn)).append("\n");
    sb.append("    privatePhone: ").append(toIndentedString(privatePhone)).append("\n");
    sb.append("    privatePhoneSanitized: ").append(toIndentedString(privatePhoneSanitized)).append("\n");
    sb.append("    birthDate: ").append(toIndentedString(birthDate)).append("\n");
    sb.append("    age: ").append(toIndentedString(age)).append("\n");
    sb.append("    nationality: ").append(toIndentedString(nationality)).append("\n");
    sb.append("    gender: ").append(toIndentedString(gender)).append("\n");
    sb.append("    pronoun: ").append(toIndentedString(pronoun)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    updated: ").append(toIndentedString(updated)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("title");
    openapiFields.add("id");
    openapiFields.add("active");
    openapiFields.add("companyId");
    openapiFields.add("officeId");
    openapiFields.add("managerEmployeeId");
    openapiFields.add("departmentId");
    openapiFields.add("costCenterId");
    openapiFields.add("employmentId");
    openapiFields.add("employmentTypeId");
    openapiFields.add("employmentCountry");
    openapiFields.add("compensationId");
    openapiFields.add("userId");
    openapiFields.add("userName");
    openapiFields.add("division");
    openapiFields.add("organization");
    openapiFields.add("employeeNumber");
    openapiFields.add("workEmail");
    openapiFields.add("workPhone");
    openapiFields.add("workPhoneSanitized");
    openapiFields.add("hireDate");
    openapiFields.add("endDate");
    openapiFields.add("hasOccupationalPension");
    openapiFields.add("privateEmail");
    openapiFields.add("firstName");
    openapiFields.add("lastName");
    openapiFields.add("ssn");
    openapiFields.add("privatePhone");
    openapiFields.add("privatePhoneSanitized");
    openapiFields.add("birthDate");
    openapiFields.add("age");
    openapiFields.add("nationality");
    openapiFields.add("gender");
    openapiFields.add("pronoun");
    openapiFields.add("created");
    openapiFields.add("updated");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to EmployeeListManyEmployeesFiltersParameter
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!EmployeeListManyEmployeesFiltersParameter.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in EmployeeListManyEmployeesFiltersParameter is not found in the empty JSON string", EmployeeListManyEmployeesFiltersParameter.openapiRequiredFields.toString()));
        }
      }
      // validate the optional field `title`
      if (jsonObj.get("title") != null && !jsonObj.get("title").isJsonNull()) {
        CompanyListManyCompaniesFiltersParameterId.validateJsonObject(jsonObj.getAsJsonObject("title"));
      }
      // validate the optional field `id`
      if (jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) {
        CompanyListManyCompaniesFiltersParameterId.validateJsonObject(jsonObj.getAsJsonObject("id"));
      }
      // validate the optional field `active`
      if (jsonObj.get("active") != null && !jsonObj.get("active").isJsonNull()) {
        CompanyListManyCompaniesFiltersParameterId.validateJsonObject(jsonObj.getAsJsonObject("active"));
      }
      // validate the optional field `companyId`
      if (jsonObj.get("companyId") != null && !jsonObj.get("companyId").isJsonNull()) {
        CompanyListManyCompaniesFiltersParameterId.validateJsonObject(jsonObj.getAsJsonObject("companyId"));
      }
      // validate the optional field `officeId`
      if (jsonObj.get("officeId") != null && !jsonObj.get("officeId").isJsonNull()) {
        CompanyListManyCompaniesFiltersParameterId.validateJsonObject(jsonObj.getAsJsonObject("officeId"));
      }
      // validate the optional field `managerEmployeeId`
      if (jsonObj.get("managerEmployeeId") != null && !jsonObj.get("managerEmployeeId").isJsonNull()) {
        CompanyListManyCompaniesFiltersParameterId.validateJsonObject(jsonObj.getAsJsonObject("managerEmployeeId"));
      }
      // validate the optional field `departmentId`
      if (jsonObj.get("departmentId") != null && !jsonObj.get("departmentId").isJsonNull()) {
        CompanyListManyCompaniesFiltersParameterId.validateJsonObject(jsonObj.getAsJsonObject("departmentId"));
      }
      // validate the optional field `costCenterId`
      if (jsonObj.get("costCenterId") != null && !jsonObj.get("costCenterId").isJsonNull()) {
        CompanyListManyCompaniesFiltersParameterId.validateJsonObject(jsonObj.getAsJsonObject("costCenterId"));
      }
      // validate the optional field `employmentId`
      if (jsonObj.get("employmentId") != null && !jsonObj.get("employmentId").isJsonNull()) {
        CompanyListManyCompaniesFiltersParameterId.validateJsonObject(jsonObj.getAsJsonObject("employmentId"));
      }
      // validate the optional field `employmentTypeId`
      if (jsonObj.get("employmentTypeId") != null && !jsonObj.get("employmentTypeId").isJsonNull()) {
        CompanyListManyCompaniesFiltersParameterId.validateJsonObject(jsonObj.getAsJsonObject("employmentTypeId"));
      }
      // validate the optional field `employmentCountry`
      if (jsonObj.get("employmentCountry") != null && !jsonObj.get("employmentCountry").isJsonNull()) {
        CompanyListManyCompaniesFiltersParameterId.validateJsonObject(jsonObj.getAsJsonObject("employmentCountry"));
      }
      // validate the optional field `compensationId`
      if (jsonObj.get("compensationId") != null && !jsonObj.get("compensationId").isJsonNull()) {
        CompanyListManyCompaniesFiltersParameterId.validateJsonObject(jsonObj.getAsJsonObject("compensationId"));
      }
      // validate the optional field `userId`
      if (jsonObj.get("userId") != null && !jsonObj.get("userId").isJsonNull()) {
        CompanyListManyCompaniesFiltersParameterId.validateJsonObject(jsonObj.getAsJsonObject("userId"));
      }
      // validate the optional field `userName`
      if (jsonObj.get("userName") != null && !jsonObj.get("userName").isJsonNull()) {
        CompanyListManyCompaniesFiltersParameterId.validateJsonObject(jsonObj.getAsJsonObject("userName"));
      }
      // validate the optional field `division`
      if (jsonObj.get("division") != null && !jsonObj.get("division").isJsonNull()) {
        CompanyListManyCompaniesFiltersParameterId.validateJsonObject(jsonObj.getAsJsonObject("division"));
      }
      // validate the optional field `organization`
      if (jsonObj.get("organization") != null && !jsonObj.get("organization").isJsonNull()) {
        CompanyListManyCompaniesFiltersParameterId.validateJsonObject(jsonObj.getAsJsonObject("organization"));
      }
      // validate the optional field `employeeNumber`
      if (jsonObj.get("employeeNumber") != null && !jsonObj.get("employeeNumber").isJsonNull()) {
        CompanyListManyCompaniesFiltersParameterId.validateJsonObject(jsonObj.getAsJsonObject("employeeNumber"));
      }
      // validate the optional field `workEmail`
      if (jsonObj.get("workEmail") != null && !jsonObj.get("workEmail").isJsonNull()) {
        CompanyListManyCompaniesFiltersParameterId.validateJsonObject(jsonObj.getAsJsonObject("workEmail"));
      }
      // validate the optional field `workPhone`
      if (jsonObj.get("workPhone") != null && !jsonObj.get("workPhone").isJsonNull()) {
        CompanyListManyCompaniesFiltersParameterId.validateJsonObject(jsonObj.getAsJsonObject("workPhone"));
      }
      // validate the optional field `workPhoneSanitized`
      if (jsonObj.get("workPhoneSanitized") != null && !jsonObj.get("workPhoneSanitized").isJsonNull()) {
        CompanyListManyCompaniesFiltersParameterId.validateJsonObject(jsonObj.getAsJsonObject("workPhoneSanitized"));
      }
      // validate the optional field `hireDate`
      if (jsonObj.get("hireDate") != null && !jsonObj.get("hireDate").isJsonNull()) {
        CompanyListManyCompaniesFiltersParameterId.validateJsonObject(jsonObj.getAsJsonObject("hireDate"));
      }
      // validate the optional field `endDate`
      if (jsonObj.get("endDate") != null && !jsonObj.get("endDate").isJsonNull()) {
        CompanyListManyCompaniesFiltersParameterId.validateJsonObject(jsonObj.getAsJsonObject("endDate"));
      }
      // validate the optional field `hasOccupationalPension`
      if (jsonObj.get("hasOccupationalPension") != null && !jsonObj.get("hasOccupationalPension").isJsonNull()) {
        CompanyListManyCompaniesFiltersParameterId.validateJsonObject(jsonObj.getAsJsonObject("hasOccupationalPension"));
      }
      // validate the optional field `privateEmail`
      if (jsonObj.get("privateEmail") != null && !jsonObj.get("privateEmail").isJsonNull()) {
        CompanyListManyCompaniesFiltersParameterId.validateJsonObject(jsonObj.getAsJsonObject("privateEmail"));
      }
      // validate the optional field `firstName`
      if (jsonObj.get("firstName") != null && !jsonObj.get("firstName").isJsonNull()) {
        CompanyListManyCompaniesFiltersParameterId.validateJsonObject(jsonObj.getAsJsonObject("firstName"));
      }
      // validate the optional field `lastName`
      if (jsonObj.get("lastName") != null && !jsonObj.get("lastName").isJsonNull()) {
        CompanyListManyCompaniesFiltersParameterId.validateJsonObject(jsonObj.getAsJsonObject("lastName"));
      }
      // validate the optional field `ssn`
      if (jsonObj.get("ssn") != null && !jsonObj.get("ssn").isJsonNull()) {
        CompanyListManyCompaniesFiltersParameterId.validateJsonObject(jsonObj.getAsJsonObject("ssn"));
      }
      // validate the optional field `privatePhone`
      if (jsonObj.get("privatePhone") != null && !jsonObj.get("privatePhone").isJsonNull()) {
        CompanyListManyCompaniesFiltersParameterId.validateJsonObject(jsonObj.getAsJsonObject("privatePhone"));
      }
      // validate the optional field `privatePhoneSanitized`
      if (jsonObj.get("privatePhoneSanitized") != null && !jsonObj.get("privatePhoneSanitized").isJsonNull()) {
        CompanyListManyCompaniesFiltersParameterId.validateJsonObject(jsonObj.getAsJsonObject("privatePhoneSanitized"));
      }
      // validate the optional field `birthDate`
      if (jsonObj.get("birthDate") != null && !jsonObj.get("birthDate").isJsonNull()) {
        CompanyListManyCompaniesFiltersParameterId.validateJsonObject(jsonObj.getAsJsonObject("birthDate"));
      }
      // validate the optional field `age`
      if (jsonObj.get("age") != null && !jsonObj.get("age").isJsonNull()) {
        CompanyListManyCompaniesFiltersParameterId.validateJsonObject(jsonObj.getAsJsonObject("age"));
      }
      // validate the optional field `nationality`
      if (jsonObj.get("nationality") != null && !jsonObj.get("nationality").isJsonNull()) {
        CompanyListManyCompaniesFiltersParameterId.validateJsonObject(jsonObj.getAsJsonObject("nationality"));
      }
      // validate the optional field `gender`
      if (jsonObj.get("gender") != null && !jsonObj.get("gender").isJsonNull()) {
        CompanyListManyCompaniesFiltersParameterId.validateJsonObject(jsonObj.getAsJsonObject("gender"));
      }
      // validate the optional field `pronoun`
      if (jsonObj.get("pronoun") != null && !jsonObj.get("pronoun").isJsonNull()) {
        CompanyListManyCompaniesFiltersParameterId.validateJsonObject(jsonObj.getAsJsonObject("pronoun"));
      }
      // validate the optional field `created`
      if (jsonObj.get("created") != null && !jsonObj.get("created").isJsonNull()) {
        CompanyListManyCompaniesFiltersParameterId.validateJsonObject(jsonObj.getAsJsonObject("created"));
      }
      // validate the optional field `updated`
      if (jsonObj.get("updated") != null && !jsonObj.get("updated").isJsonNull()) {
        CompanyListManyCompaniesFiltersParameterId.validateJsonObject(jsonObj.getAsJsonObject("updated"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!EmployeeListManyEmployeesFiltersParameter.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'EmployeeListManyEmployeesFiltersParameter' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<EmployeeListManyEmployeesFiltersParameter> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(EmployeeListManyEmployeesFiltersParameter.class));

       return (TypeAdapter<T>) new TypeAdapter<EmployeeListManyEmployeesFiltersParameter>() {
           @Override
           public void write(JsonWriter out, EmployeeListManyEmployeesFiltersParameter value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public EmployeeListManyEmployeesFiltersParameter read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             EmployeeListManyEmployeesFiltersParameter instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of EmployeeListManyEmployeesFiltersParameter given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of EmployeeListManyEmployeesFiltersParameter
  * @throws IOException if the JSON string is invalid with respect to EmployeeListManyEmployeesFiltersParameter
  */
  public static EmployeeListManyEmployeesFiltersParameter fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, EmployeeListManyEmployeesFiltersParameter.class);
  }

 /**
  * Convert an instance of EmployeeListManyEmployeesFiltersParameter to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

