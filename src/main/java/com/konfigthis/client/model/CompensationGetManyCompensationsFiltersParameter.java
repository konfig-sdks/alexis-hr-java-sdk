/*
 * AlexisHR API
 * <h1 id=\"introduction\">Introduction</h1>  <p>    AlexisHR API is currently in preview. This means that small, backward    incompatible changes might be introduced while in preview. The changes will be    documented and communicated.    <a      href=\"https://cdn.forms-content.sg-form.com/56c6a65c-90a2-11eb-a700-a6de1aea3a1a\"      target=\"_blank\"      ><button>Subscribe to updates</button></a    >  </p>    <h1 id=\"authentication\">Authentication</h1>  <pre class=\"click-to-expand-wrapper is-snippet-wrapper language-undefined\">  <code class=\"is-highlighted language-bash\">curl https://api.alexishr.com/v1/employee \\    -H \"Authorization: Bearer &lt;your_access_token&gt;\"</code>  </pre>  <p>    Authenticate your account when using the API by including your secret Access    Token in the request.    <a href=\"https://app.alexishr.com/access-tokens\">Manage your Access Tokens</a    >.  </p>  <p>    Authentication is performed by passing the Access Token in the Authorization    header.  </p>  <hr />    <h1 id=\"structure\">Structure</h1>  <p>    You will find the structure of the API to be highly uniform and consistent.    Typically every resource can be accessed via a top level endpoint, such as    <code>/v1/employee</code>. For every such resource, you can perform some of    the following operations:  </p>  <h2>Operations</h2>  <table>    <tr>      <td>GET /v1/:resource</td>      <td>List all objects of this type</td>    </tr>    <tr>      <td>GET /v1/:resource/:id</td>      <td>Retrieve a resource by id</td>    </tr>    <tr>      <td>POST /v1/:resource</td>      <td>Create a resource of this type</td>    </tr>    <tr>      <td>PATCH /v1/:resource/:id</td>      <td>Update the resource by id</td>    </tr>    <tr>      <td>DELETE /v1/:resource/:id</td>      <td>Delete the resource by id</td>    </tr>  </table>  <hr />    <h1 id=\"roles\">Roles</h1>  <p>The Access Tokens will have owner permission on the account</p>  <hr />    <h1 id=\"filters\">Filters</h1>  <p>    Some of the list endpoints allow to filter results by certain conditions.    Refer to specific resources to find out what criteria are allowed. Below is a    list of the different conditions.  </p>    <h4 id=\"eq\"><code>$eq</code></h4>  <p>Find all results matching the attribute value specified.</p>  <div>    <pre><code class=\"language-shell\" data-lang=\"shell\">GET /v1/example?filters[fieldName][$eq]=value</code></pre>  </div>  <p>Can also be simplified like this.</p>  <div>    <pre><code class=\"language-shell\" data-lang=\"shell\">GET /v1/example?filters[fieldName]=value</code></pre>  </div>    <h4 id=\"neq\"><code>$neq</code></h4>  <p>Find all results not matching the attribute value specified.</p>  <div>    <pre><code class=\"language-shell\" data-lang=\"shell\">GET /v1/example?filters[fieldName][$neq]=value</code></pre>  </div>    <h4 id=\"gt\"><code>$gt</code>, <code>$gte</code></h4>  <p>    Find all results where the value is more (<code>$gt</code>) or more and equal    (<code>$gte</code>) to a given value.  </p>  <div>    <pre><code class=\"language-shell\" data-lang=\"shell\">GET /v1/example?filters[startDate][$gte]=2020-01-01</code></pre>  </div>  <hr />    <h4 id=\"lt\"><code>$lt</code>, <code>$lte</code></h4>  <p>    Find all results where the value is less (<code>$lt</code>) or less and equal    (<code>$lte</code>) to a given value.  </p>  <div>    <pre><code class=\"language-shell\" data-lang=\"shell\">GET /v1/example?filters[startDate][$lte]=2020-01-01</code></pre>  </div>  <hr />    <h4 id=\"in\"><code>$in</code>, <code>$nin</code></h4>  <p>    Find all results matching (<code>$in</code>) or not matching    (<code>$nin</code>) any of the attribute values specified.  </p>  <div>    <pre><code class=\"language-shell\" data-lang=\"shell\">GET /v1/example?filters[fieldName][$in][]=value1&filters[fieldName][$in][]=value2</code></pre>  </div>  <hr />    <h4 id=\"between\"><code>$between</code></h4>  <p>Find all results between two values specified.</p>  <div>    <pre><code class=\"language-shell\" data-lang=\"shell\">GET /v1/example?filters[startDate][$between][]=2020-01-01&filters[startDate][$between][]=2020-12-31</code></pre>  </div>  <hr />    <h1 id=\"versioning\">Versioning</h1>  <p>    Each version of the API is guaranteed to be compatible with the resources of    the same version. When we make breaking changes to the API a new version will    be published  </p>  <hr />    <h1 id=\"changelog\">Changelog</h1>  <h3>2023-12-20</h3>  <p>Field [updated] added for filter & select for Get Many Employments and Get Many Employees.</p>  <h3>2021-03-15</h3>  <p>First draft was published</p>  <hr />   # Authentication  <!-- ReDoc-Inject: <security-definitions> -->
 *
 * The version of the OpenAPI document: v1-preview
 * Contact: support@alexishr.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.CompanyListManyCompaniesFiltersParameterId;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * CompensationGetManyCompensationsFiltersParameter
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class CompensationGetManyCompensationsFiltersParameter {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private CompanyListManyCompaniesFiltersParameterId id;

  public static final String SERIALIZED_NAME_EMPLOYEE_ID = "employeeId";
  @SerializedName(SERIALIZED_NAME_EMPLOYEE_ID)
  private CompanyListManyCompaniesFiltersParameterId employeeId;

  public static final String SERIALIZED_NAME_COMPANY_ID = "companyId";
  @SerializedName(SERIALIZED_NAME_COMPANY_ID)
  private CompanyListManyCompaniesFiltersParameterId companyId;

  public static final String SERIALIZED_NAME_AMOUNT = "amount";
  @SerializedName(SERIALIZED_NAME_AMOUNT)
  private CompanyListManyCompaniesFiltersParameterId amount;

  public static final String SERIALIZED_NAME_EFFECTIVE_DATE = "effectiveDate";
  @SerializedName(SERIALIZED_NAME_EFFECTIVE_DATE)
  private CompanyListManyCompaniesFiltersParameterId effectiveDate;

  public static final String SERIALIZED_NAME_BASE_AMOUNT = "baseAmount";
  @SerializedName(SERIALIZED_NAME_BASE_AMOUNT)
  private CompanyListManyCompaniesFiltersParameterId baseAmount;

  public static final String SERIALIZED_NAME_EXCHANGE_RATE = "exchangeRate";
  @SerializedName(SERIALIZED_NAME_EXCHANGE_RATE)
  private CompanyListManyCompaniesFiltersParameterId exchangeRate;

  public static final String SERIALIZED_NAME_CURRENCY = "currency";
  @SerializedName(SERIALIZED_NAME_CURRENCY)
  private CompanyListManyCompaniesFiltersParameterId currency;

  public static final String SERIALIZED_NAME_PAYOUT_DAY = "payoutDay";
  @SerializedName(SERIALIZED_NAME_PAYOUT_DAY)
  private CompanyListManyCompaniesFiltersParameterId payoutDay;

  public static final String SERIALIZED_NAME_PAYOUT_PERIOD = "payoutPeriod";
  @SerializedName(SERIALIZED_NAME_PAYOUT_PERIOD)
  private CompanyListManyCompaniesFiltersParameterId payoutPeriod;

  public static final String SERIALIZED_NAME_PAYOUT_FREQUENCY = "payoutFrequency";
  @SerializedName(SERIALIZED_NAME_PAYOUT_FREQUENCY)
  private CompanyListManyCompaniesFiltersParameterId payoutFrequency;

  public static final String SERIALIZED_NAME_SALARY_SCHEDULE = "salarySchedule";
  @SerializedName(SERIALIZED_NAME_SALARY_SCHEDULE)
  private CompanyListManyCompaniesFiltersParameterId salarySchedule;

  public static final String SERIALIZED_NAME_PAID_OVERTIME = "paidOvertime";
  @SerializedName(SERIALIZED_NAME_PAID_OVERTIME)
  private CompanyListManyCompaniesFiltersParameterId paidOvertime;

  public static final String SERIALIZED_NAME_NOTE = "note";
  @SerializedName(SERIALIZED_NAME_NOTE)
  private CompanyListManyCompaniesFiltersParameterId note;

  public CompensationGetManyCompensationsFiltersParameter() {
  }

  public CompensationGetManyCompensationsFiltersParameter id(CompanyListManyCompaniesFiltersParameterId id) {
    
    
    
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CompanyListManyCompaniesFiltersParameterId getId() {
    return id;
  }


  public void setId(CompanyListManyCompaniesFiltersParameterId id) {
    
    
    
    this.id = id;
  }


  public CompensationGetManyCompensationsFiltersParameter employeeId(CompanyListManyCompaniesFiltersParameterId employeeId) {
    
    
    
    
    this.employeeId = employeeId;
    return this;
  }

   /**
   * Get employeeId
   * @return employeeId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CompanyListManyCompaniesFiltersParameterId getEmployeeId() {
    return employeeId;
  }


  public void setEmployeeId(CompanyListManyCompaniesFiltersParameterId employeeId) {
    
    
    
    this.employeeId = employeeId;
  }


  public CompensationGetManyCompensationsFiltersParameter companyId(CompanyListManyCompaniesFiltersParameterId companyId) {
    
    
    
    
    this.companyId = companyId;
    return this;
  }

   /**
   * Get companyId
   * @return companyId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CompanyListManyCompaniesFiltersParameterId getCompanyId() {
    return companyId;
  }


  public void setCompanyId(CompanyListManyCompaniesFiltersParameterId companyId) {
    
    
    
    this.companyId = companyId;
  }


  public CompensationGetManyCompensationsFiltersParameter amount(CompanyListManyCompaniesFiltersParameterId amount) {
    
    
    
    
    this.amount = amount;
    return this;
  }

   /**
   * Get amount
   * @return amount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CompanyListManyCompaniesFiltersParameterId getAmount() {
    return amount;
  }


  public void setAmount(CompanyListManyCompaniesFiltersParameterId amount) {
    
    
    
    this.amount = amount;
  }


  public CompensationGetManyCompensationsFiltersParameter effectiveDate(CompanyListManyCompaniesFiltersParameterId effectiveDate) {
    
    
    
    
    this.effectiveDate = effectiveDate;
    return this;
  }

   /**
   * Get effectiveDate
   * @return effectiveDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CompanyListManyCompaniesFiltersParameterId getEffectiveDate() {
    return effectiveDate;
  }


  public void setEffectiveDate(CompanyListManyCompaniesFiltersParameterId effectiveDate) {
    
    
    
    this.effectiveDate = effectiveDate;
  }


  public CompensationGetManyCompensationsFiltersParameter baseAmount(CompanyListManyCompaniesFiltersParameterId baseAmount) {
    
    
    
    
    this.baseAmount = baseAmount;
    return this;
  }

   /**
   * Get baseAmount
   * @return baseAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CompanyListManyCompaniesFiltersParameterId getBaseAmount() {
    return baseAmount;
  }


  public void setBaseAmount(CompanyListManyCompaniesFiltersParameterId baseAmount) {
    
    
    
    this.baseAmount = baseAmount;
  }


  public CompensationGetManyCompensationsFiltersParameter exchangeRate(CompanyListManyCompaniesFiltersParameterId exchangeRate) {
    
    
    
    
    this.exchangeRate = exchangeRate;
    return this;
  }

   /**
   * Get exchangeRate
   * @return exchangeRate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CompanyListManyCompaniesFiltersParameterId getExchangeRate() {
    return exchangeRate;
  }


  public void setExchangeRate(CompanyListManyCompaniesFiltersParameterId exchangeRate) {
    
    
    
    this.exchangeRate = exchangeRate;
  }


  public CompensationGetManyCompensationsFiltersParameter currency(CompanyListManyCompaniesFiltersParameterId currency) {
    
    
    
    
    this.currency = currency;
    return this;
  }

   /**
   * Get currency
   * @return currency
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CompanyListManyCompaniesFiltersParameterId getCurrency() {
    return currency;
  }


  public void setCurrency(CompanyListManyCompaniesFiltersParameterId currency) {
    
    
    
    this.currency = currency;
  }


  public CompensationGetManyCompensationsFiltersParameter payoutDay(CompanyListManyCompaniesFiltersParameterId payoutDay) {
    
    
    
    
    this.payoutDay = payoutDay;
    return this;
  }

   /**
   * Get payoutDay
   * @return payoutDay
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CompanyListManyCompaniesFiltersParameterId getPayoutDay() {
    return payoutDay;
  }


  public void setPayoutDay(CompanyListManyCompaniesFiltersParameterId payoutDay) {
    
    
    
    this.payoutDay = payoutDay;
  }


  public CompensationGetManyCompensationsFiltersParameter payoutPeriod(CompanyListManyCompaniesFiltersParameterId payoutPeriod) {
    
    
    
    
    this.payoutPeriod = payoutPeriod;
    return this;
  }

   /**
   * Get payoutPeriod
   * @return payoutPeriod
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CompanyListManyCompaniesFiltersParameterId getPayoutPeriod() {
    return payoutPeriod;
  }


  public void setPayoutPeriod(CompanyListManyCompaniesFiltersParameterId payoutPeriod) {
    
    
    
    this.payoutPeriod = payoutPeriod;
  }


  public CompensationGetManyCompensationsFiltersParameter payoutFrequency(CompanyListManyCompaniesFiltersParameterId payoutFrequency) {
    
    
    
    
    this.payoutFrequency = payoutFrequency;
    return this;
  }

   /**
   * Get payoutFrequency
   * @return payoutFrequency
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CompanyListManyCompaniesFiltersParameterId getPayoutFrequency() {
    return payoutFrequency;
  }


  public void setPayoutFrequency(CompanyListManyCompaniesFiltersParameterId payoutFrequency) {
    
    
    
    this.payoutFrequency = payoutFrequency;
  }


  public CompensationGetManyCompensationsFiltersParameter salarySchedule(CompanyListManyCompaniesFiltersParameterId salarySchedule) {
    
    
    
    
    this.salarySchedule = salarySchedule;
    return this;
  }

   /**
   * Get salarySchedule
   * @return salarySchedule
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CompanyListManyCompaniesFiltersParameterId getSalarySchedule() {
    return salarySchedule;
  }


  public void setSalarySchedule(CompanyListManyCompaniesFiltersParameterId salarySchedule) {
    
    
    
    this.salarySchedule = salarySchedule;
  }


  public CompensationGetManyCompensationsFiltersParameter paidOvertime(CompanyListManyCompaniesFiltersParameterId paidOvertime) {
    
    
    
    
    this.paidOvertime = paidOvertime;
    return this;
  }

   /**
   * Get paidOvertime
   * @return paidOvertime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CompanyListManyCompaniesFiltersParameterId getPaidOvertime() {
    return paidOvertime;
  }


  public void setPaidOvertime(CompanyListManyCompaniesFiltersParameterId paidOvertime) {
    
    
    
    this.paidOvertime = paidOvertime;
  }


  public CompensationGetManyCompensationsFiltersParameter note(CompanyListManyCompaniesFiltersParameterId note) {
    
    
    
    
    this.note = note;
    return this;
  }

   /**
   * Get note
   * @return note
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CompanyListManyCompaniesFiltersParameterId getNote() {
    return note;
  }


  public void setNote(CompanyListManyCompaniesFiltersParameterId note) {
    
    
    
    this.note = note;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the CompensationGetManyCompensationsFiltersParameter instance itself
   */
  public CompensationGetManyCompensationsFiltersParameter putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CompensationGetManyCompensationsFiltersParameter compensationGetManyCompensationsFiltersParameter = (CompensationGetManyCompensationsFiltersParameter) o;
    return Objects.equals(this.id, compensationGetManyCompensationsFiltersParameter.id) &&
        Objects.equals(this.employeeId, compensationGetManyCompensationsFiltersParameter.employeeId) &&
        Objects.equals(this.companyId, compensationGetManyCompensationsFiltersParameter.companyId) &&
        Objects.equals(this.amount, compensationGetManyCompensationsFiltersParameter.amount) &&
        Objects.equals(this.effectiveDate, compensationGetManyCompensationsFiltersParameter.effectiveDate) &&
        Objects.equals(this.baseAmount, compensationGetManyCompensationsFiltersParameter.baseAmount) &&
        Objects.equals(this.exchangeRate, compensationGetManyCompensationsFiltersParameter.exchangeRate) &&
        Objects.equals(this.currency, compensationGetManyCompensationsFiltersParameter.currency) &&
        Objects.equals(this.payoutDay, compensationGetManyCompensationsFiltersParameter.payoutDay) &&
        Objects.equals(this.payoutPeriod, compensationGetManyCompensationsFiltersParameter.payoutPeriod) &&
        Objects.equals(this.payoutFrequency, compensationGetManyCompensationsFiltersParameter.payoutFrequency) &&
        Objects.equals(this.salarySchedule, compensationGetManyCompensationsFiltersParameter.salarySchedule) &&
        Objects.equals(this.paidOvertime, compensationGetManyCompensationsFiltersParameter.paidOvertime) &&
        Objects.equals(this.note, compensationGetManyCompensationsFiltersParameter.note)&&
        Objects.equals(this.additionalProperties, compensationGetManyCompensationsFiltersParameter.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, employeeId, companyId, amount, effectiveDate, baseAmount, exchangeRate, currency, payoutDay, payoutPeriod, payoutFrequency, salarySchedule, paidOvertime, note, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CompensationGetManyCompensationsFiltersParameter {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    employeeId: ").append(toIndentedString(employeeId)).append("\n");
    sb.append("    companyId: ").append(toIndentedString(companyId)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    effectiveDate: ").append(toIndentedString(effectiveDate)).append("\n");
    sb.append("    baseAmount: ").append(toIndentedString(baseAmount)).append("\n");
    sb.append("    exchangeRate: ").append(toIndentedString(exchangeRate)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    payoutDay: ").append(toIndentedString(payoutDay)).append("\n");
    sb.append("    payoutPeriod: ").append(toIndentedString(payoutPeriod)).append("\n");
    sb.append("    payoutFrequency: ").append(toIndentedString(payoutFrequency)).append("\n");
    sb.append("    salarySchedule: ").append(toIndentedString(salarySchedule)).append("\n");
    sb.append("    paidOvertime: ").append(toIndentedString(paidOvertime)).append("\n");
    sb.append("    note: ").append(toIndentedString(note)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("employeeId");
    openapiFields.add("companyId");
    openapiFields.add("amount");
    openapiFields.add("effectiveDate");
    openapiFields.add("baseAmount");
    openapiFields.add("exchangeRate");
    openapiFields.add("currency");
    openapiFields.add("payoutDay");
    openapiFields.add("payoutPeriod");
    openapiFields.add("payoutFrequency");
    openapiFields.add("salarySchedule");
    openapiFields.add("paidOvertime");
    openapiFields.add("note");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to CompensationGetManyCompensationsFiltersParameter
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!CompensationGetManyCompensationsFiltersParameter.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CompensationGetManyCompensationsFiltersParameter is not found in the empty JSON string", CompensationGetManyCompensationsFiltersParameter.openapiRequiredFields.toString()));
        }
      }
      // validate the optional field `id`
      if (jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) {
        CompanyListManyCompaniesFiltersParameterId.validateJsonObject(jsonObj.getAsJsonObject("id"));
      }
      // validate the optional field `employeeId`
      if (jsonObj.get("employeeId") != null && !jsonObj.get("employeeId").isJsonNull()) {
        CompanyListManyCompaniesFiltersParameterId.validateJsonObject(jsonObj.getAsJsonObject("employeeId"));
      }
      // validate the optional field `companyId`
      if (jsonObj.get("companyId") != null && !jsonObj.get("companyId").isJsonNull()) {
        CompanyListManyCompaniesFiltersParameterId.validateJsonObject(jsonObj.getAsJsonObject("companyId"));
      }
      // validate the optional field `amount`
      if (jsonObj.get("amount") != null && !jsonObj.get("amount").isJsonNull()) {
        CompanyListManyCompaniesFiltersParameterId.validateJsonObject(jsonObj.getAsJsonObject("amount"));
      }
      // validate the optional field `effectiveDate`
      if (jsonObj.get("effectiveDate") != null && !jsonObj.get("effectiveDate").isJsonNull()) {
        CompanyListManyCompaniesFiltersParameterId.validateJsonObject(jsonObj.getAsJsonObject("effectiveDate"));
      }
      // validate the optional field `baseAmount`
      if (jsonObj.get("baseAmount") != null && !jsonObj.get("baseAmount").isJsonNull()) {
        CompanyListManyCompaniesFiltersParameterId.validateJsonObject(jsonObj.getAsJsonObject("baseAmount"));
      }
      // validate the optional field `exchangeRate`
      if (jsonObj.get("exchangeRate") != null && !jsonObj.get("exchangeRate").isJsonNull()) {
        CompanyListManyCompaniesFiltersParameterId.validateJsonObject(jsonObj.getAsJsonObject("exchangeRate"));
      }
      // validate the optional field `currency`
      if (jsonObj.get("currency") != null && !jsonObj.get("currency").isJsonNull()) {
        CompanyListManyCompaniesFiltersParameterId.validateJsonObject(jsonObj.getAsJsonObject("currency"));
      }
      // validate the optional field `payoutDay`
      if (jsonObj.get("payoutDay") != null && !jsonObj.get("payoutDay").isJsonNull()) {
        CompanyListManyCompaniesFiltersParameterId.validateJsonObject(jsonObj.getAsJsonObject("payoutDay"));
      }
      // validate the optional field `payoutPeriod`
      if (jsonObj.get("payoutPeriod") != null && !jsonObj.get("payoutPeriod").isJsonNull()) {
        CompanyListManyCompaniesFiltersParameterId.validateJsonObject(jsonObj.getAsJsonObject("payoutPeriod"));
      }
      // validate the optional field `payoutFrequency`
      if (jsonObj.get("payoutFrequency") != null && !jsonObj.get("payoutFrequency").isJsonNull()) {
        CompanyListManyCompaniesFiltersParameterId.validateJsonObject(jsonObj.getAsJsonObject("payoutFrequency"));
      }
      // validate the optional field `salarySchedule`
      if (jsonObj.get("salarySchedule") != null && !jsonObj.get("salarySchedule").isJsonNull()) {
        CompanyListManyCompaniesFiltersParameterId.validateJsonObject(jsonObj.getAsJsonObject("salarySchedule"));
      }
      // validate the optional field `paidOvertime`
      if (jsonObj.get("paidOvertime") != null && !jsonObj.get("paidOvertime").isJsonNull()) {
        CompanyListManyCompaniesFiltersParameterId.validateJsonObject(jsonObj.getAsJsonObject("paidOvertime"));
      }
      // validate the optional field `note`
      if (jsonObj.get("note") != null && !jsonObj.get("note").isJsonNull()) {
        CompanyListManyCompaniesFiltersParameterId.validateJsonObject(jsonObj.getAsJsonObject("note"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CompensationGetManyCompensationsFiltersParameter.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CompensationGetManyCompensationsFiltersParameter' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CompensationGetManyCompensationsFiltersParameter> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CompensationGetManyCompensationsFiltersParameter.class));

       return (TypeAdapter<T>) new TypeAdapter<CompensationGetManyCompensationsFiltersParameter>() {
           @Override
           public void write(JsonWriter out, CompensationGetManyCompensationsFiltersParameter value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public CompensationGetManyCompensationsFiltersParameter read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             CompensationGetManyCompensationsFiltersParameter instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of CompensationGetManyCompensationsFiltersParameter given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of CompensationGetManyCompensationsFiltersParameter
  * @throws IOException if the JSON string is invalid with respect to CompensationGetManyCompensationsFiltersParameter
  */
  public static CompensationGetManyCompensationsFiltersParameter fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CompensationGetManyCompensationsFiltersParameter.class);
  }

 /**
  * Convert an instance of CompensationGetManyCompensationsFiltersParameter to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

